// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using e_Delivery.Database;

#nullable disable

namespace e_Delivery.Database.Migrations
{
    [DbContext(typeof(eDeliveryDBContext))]
    [Migration("20240611141751_init2")]
    partial class init2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("asp_net_role_claims", "identity");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("asp_net_user_claims", "identity");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("asp_net_user_logins", "identity");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("asp_net_user_roles", "identity");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("4325ff27-c4d1-4ee8-8073-518fafba8678"),
                            RoleId = new Guid("353224f4-7950-428d-a141-08dc2a5ba67c")
                        },
                        new
                        {
                            UserId = new Guid("fd8eeeae-94c0-4f7c-ae8d-04274d13031b"),
                            RoleId = new Guid("f57f872c-eaa4-441e-a142-08dc2a5ba67c")
                        },
                        new
                        {
                            UserId = new Guid("bcc3036b-fcde-4aae-8d5a-7d3b85a91310"),
                            RoleId = new Guid("f57f872c-eaa4-441e-a142-08dc2a5ba67c")
                        },
                        new
                        {
                            UserId = new Guid("a6262414-844d-4003-9184-1a39fcc8d621"),
                            RoleId = new Guid("f57f872c-eaa4-441e-a142-08dc2a5ba67c")
                        },
                        new
                        {
                            UserId = new Guid("6c932e9e-d350-4103-bd77-c2716d6f4a1f"),
                            RoleId = new Guid("f57f872c-eaa4-441e-a142-08dc2a5ba67c")
                        },
                        new
                        {
                            UserId = new Guid("6f43201b-919e-471f-9ca7-4f4d0c74ca39"),
                            RoleId = new Guid("f57f872c-eaa4-441e-a142-08dc2a5ba67c")
                        },
                        new
                        {
                            UserId = new Guid("e7286ada-7ad6-4bb4-8b0a-436141928671"),
                            RoleId = new Guid("f57f872c-eaa4-441e-a142-08dc2a5ba67c")
                        },
                        new
                        {
                            UserId = new Guid("d405edf6-6ebf-4c20-861d-077f70fbcfb7"),
                            RoleId = new Guid("f57f872c-eaa4-441e-a142-08dc2a5ba67c")
                        },
                        new
                        {
                            UserId = new Guid("b8396f1d-a29a-4856-a4c1-1312dc97a4a1"),
                            RoleId = new Guid("7d7168d4-ef7e-4503-a144-08dc2a5ba67c")
                        },
                        new
                        {
                            UserId = new Guid("b8cd72fb-eac5-40d5-8b22-7e8d601e2760"),
                            RoleId = new Guid("7d7168d4-ef7e-4503-a144-08dc2a5ba67c")
                        },
                        new
                        {
                            UserId = new Guid("1bb03af4-c9c6-42f4-8153-dfd0e427bb43"),
                            RoleId = new Guid("7d7168d4-ef7e-4503-a144-08dc2a5ba67c")
                        },
                        new
                        {
                            UserId = new Guid("bb5f8b53-1b9c-404f-86c4-6c6036102045"),
                            RoleId = new Guid("67c0d30a-d873-4f9b-a143-08dc2a5ba67c")
                        },
                        new
                        {
                            UserId = new Guid("29f648d1-4b82-4bf9-be7c-dc690b6edbf9"),
                            RoleId = new Guid("67c0d30a-d873-4f9b-a143-08dc2a5ba67c")
                        },
                        new
                        {
                            UserId = new Guid("531cbf7f-0aa1-44b2-8186-83867ac6e257"),
                            RoleId = new Guid("67c0d30a-d873-4f9b-a143-08dc2a5ba67c")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("asp_net_user_tokens", "identity");
                });

            modelBuilder.Entity("e_Delivery.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(1420),
                            IsDeleted = false,
                            Name = "Burger"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(1451),
                            IsDeleted = false,
                            Name = "Pizza"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(1454),
                            IsDeleted = false,
                            Name = "Pasta"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(1456),
                            IsDeleted = false,
                            Name = "Sea Food"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(1457),
                            IsDeleted = false,
                            Name = "Grill"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(1460),
                            IsDeleted = false,
                            Name = "Vegetarian"
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(1462),
                            IsDeleted = false,
                            Name = "Vegan"
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(1463),
                            IsDeleted = false,
                            Name = "Sandwich"
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(1465),
                            IsDeleted = false,
                            Name = "Cooked dishes"
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(1467),
                            IsDeleted = false,
                            Name = "Cakes"
                        },
                        new
                        {
                            Id = 11,
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(1469),
                            IsDeleted = false,
                            Name = "Pancakes"
                        });
                });

            modelBuilder.Entity("e_Delivery.Entities.Chat", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("UserFromId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserToId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserFromId");

                    b.HasIndex("UserToId");

                    b.ToTable("Chats");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a7387e77-1ca2-470c-96bb-da318ef445bc"),
                            Content = "Hello I have your order here!",
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(3125),
                            IsDeleted = false,
                            UserFromId = new Guid("b8396f1d-a29a-4856-a4c1-1312dc97a4a1"),
                            UserToId = new Guid("bb5f8b53-1b9c-404f-86c4-6c6036102045")
                        },
                        new
                        {
                            Id = new Guid("65cde832-f7cd-445b-85a4-1216ad31efe8"),
                            Content = "Hello your order is right outside!",
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(3130),
                            IsDeleted = false,
                            UserFromId = new Guid("b8cd72fb-eac5-40d5-8b22-7e8d601e2760"),
                            UserToId = new Guid("bb5f8b53-1b9c-404f-86c4-6c6036102045")
                        },
                        new
                        {
                            Id = new Guid("840e162e-4cad-4c3b-ae4a-338e973bcc7f"),
                            Content = "Hello, where is your apartment?",
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(3136),
                            IsDeleted = false,
                            UserFromId = new Guid("1bb03af4-c9c6-42f4-8153-dfd0e427bb43"),
                            UserToId = new Guid("bb5f8b53-1b9c-404f-86c4-6c6036102045")
                        });
                });

            modelBuilder.Entity("e_Delivery.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(1526),
                            IsDeleted = false,
                            Title = "Mostar"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(1529),
                            IsDeleted = false,
                            Title = "Sarajevo"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(1531),
                            IsDeleted = false,
                            Title = "Zenica"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(1533),
                            IsDeleted = false,
                            Title = "Tuzla"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(1534),
                            IsDeleted = false,
                            Title = "Banja Luka"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(1537),
                            IsDeleted = false,
                            Title = "Bihać"
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(1538),
                            IsDeleted = false,
                            Title = "Bijeljina"
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(1540),
                            IsDeleted = false,
                            Title = "Brčko"
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(1541),
                            IsDeleted = false,
                            Title = "Cazin"
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(1543),
                            IsDeleted = false,
                            Title = "Čapljina"
                        },
                        new
                        {
                            Id = 11,
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(1545),
                            IsDeleted = false,
                            Title = "Derventa"
                        },
                        new
                        {
                            Id = 12,
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(1547),
                            IsDeleted = false,
                            Title = "Doboj"
                        },
                        new
                        {
                            Id = 13,
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(1548),
                            IsDeleted = false,
                            Title = "Goražde"
                        },
                        new
                        {
                            Id = 14,
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(1550),
                            IsDeleted = false,
                            Title = "Gračanica"
                        },
                        new
                        {
                            Id = 15,
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(1551),
                            IsDeleted = false,
                            Title = "Gradačac"
                        },
                        new
                        {
                            Id = 16,
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(1553),
                            IsDeleted = false,
                            Title = "Gradiška"
                        },
                        new
                        {
                            Id = 17,
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(1554),
                            IsDeleted = false,
                            Title = "Konjic"
                        },
                        new
                        {
                            Id = 18,
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(1557),
                            IsDeleted = false,
                            Title = "Laktaši"
                        },
                        new
                        {
                            Id = 19,
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(1558),
                            IsDeleted = false,
                            Title = "Livno"
                        },
                        new
                        {
                            Id = 20,
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(1560),
                            IsDeleted = false,
                            Title = "Lukavac"
                        },
                        new
                        {
                            Id = 21,
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(1561),
                            IsDeleted = false,
                            Title = "Ljubuški"
                        },
                        new
                        {
                            Id = 22,
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(1563),
                            IsDeleted = false,
                            Title = "Orašje"
                        },
                        new
                        {
                            Id = 23,
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(1564),
                            IsDeleted = false,
                            Title = "Prijedor"
                        },
                        new
                        {
                            Id = 24,
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(1566),
                            IsDeleted = false,
                            Title = "Prnjavor"
                        },
                        new
                        {
                            Id = 25,
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(1567),
                            IsDeleted = false,
                            Title = "Srebrenik"
                        },
                        new
                        {
                            Id = 26,
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(1569),
                            IsDeleted = false,
                            Title = "Stolac"
                        },
                        new
                        {
                            Id = 27,
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(1570),
                            IsDeleted = false,
                            Title = "Široki Brijeg"
                        },
                        new
                        {
                            Id = 28,
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(1572),
                            IsDeleted = false,
                            Title = "Trebinje"
                        },
                        new
                        {
                            Id = 29,
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(1573),
                            IsDeleted = false,
                            Title = "Visoko"
                        },
                        new
                        {
                            Id = 30,
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(1575),
                            IsDeleted = false,
                            Title = "Zavidovići"
                        },
                        new
                        {
                            Id = 31,
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(1576),
                            IsDeleted = false,
                            Title = "Zvornik"
                        },
                        new
                        {
                            Id = 32,
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(1578),
                            IsDeleted = false,
                            Title = "Živinice"
                        });
                });

            modelBuilder.Entity("e_Delivery.Entities.Email", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Emails");
                });

            modelBuilder.Entity("e_Delivery.Entities.FoodItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<Guid?>("CreatedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("ModifiedByUserId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("FoodItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreatedByUserId = new Guid("fd8eeeae-94c0-4f7c-ae8d-04274d13031b"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2252),
                            Description = "Juicy beef patty with tomato, salad, onions",
                            IsAvailable = true,
                            IsDeleted = false,
                            ModifiedByUserId = new Guid("fd8eeeae-94c0-4f7c-ae8d-04274d13031b"),
                            Name = "Hamburger",
                            Price = 9.0,
                            RestaurantId = 1
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            CreatedByUserId = new Guid("fd8eeeae-94c0-4f7c-ae8d-04274d13031b"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2258),
                            Description = "Juicy beef patty with tomato, salad, onions and cheese",
                            IsAvailable = true,
                            IsDeleted = false,
                            ModifiedByUserId = new Guid("fd8eeeae-94c0-4f7c-ae8d-04274d13031b"),
                            Name = "Cheeseburger",
                            Price = 11.0,
                            RestaurantId = 1
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            CreatedByUserId = new Guid("fd8eeeae-94c0-4f7c-ae8d-04274d13031b"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2261),
                            Description = "Regular pizza with Gauda cheese",
                            IsAvailable = true,
                            IsDeleted = false,
                            ModifiedByUserId = new Guid("fd8eeeae-94c0-4f7c-ae8d-04274d13031b"),
                            Name = "Margarita",
                            Price = 9.0,
                            RestaurantId = 1
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            CreatedByUserId = new Guid("fd8eeeae-94c0-4f7c-ae8d-04274d13031b"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2264),
                            Description = "Pizza with salami and mushrooms",
                            IsAvailable = true,
                            IsDeleted = false,
                            ModifiedByUserId = new Guid("fd8eeeae-94c0-4f7c-ae8d-04274d13031b"),
                            Name = "Capricciosa",
                            Price = 11.0,
                            RestaurantId = 1
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 2,
                            CreatedByUserId = new Guid("fd8eeeae-94c0-4f7c-ae8d-04274d13031b"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2267),
                            Description = "Pizza with mushrooms",
                            IsAvailable = true,
                            IsDeleted = false,
                            ModifiedByUserId = new Guid("fd8eeeae-94c0-4f7c-ae8d-04274d13031b"),
                            Name = "Funghi",
                            Price = 10.0,
                            RestaurantId = 1
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 5,
                            CreatedByUserId = new Guid("fd8eeeae-94c0-4f7c-ae8d-04274d13031b"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2271),
                            Description = "Grilled chicken 100g",
                            IsAvailable = true,
                            IsDeleted = false,
                            ModifiedByUserId = new Guid("fd8eeeae-94c0-4f7c-ae8d-04274d13031b"),
                            Name = "Chicken fillet",
                            Price = 9.0,
                            RestaurantId = 1
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 5,
                            CreatedByUserId = new Guid("fd8eeeae-94c0-4f7c-ae8d-04274d13031b"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2274),
                            Description = "Lamb sausages 100g",
                            IsAvailable = true,
                            IsDeleted = false,
                            ModifiedByUserId = new Guid("fd8eeeae-94c0-4f7c-ae8d-04274d13031b"),
                            Name = "Sausages",
                            Price = 9.0,
                            RestaurantId = 1
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 8,
                            CreatedByUserId = new Guid("fd8eeeae-94c0-4f7c-ae8d-04274d13031b"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2277),
                            Description = "Salami-cheese sandwich with tomato, lettuce and onions",
                            IsAvailable = true,
                            IsDeleted = false,
                            ModifiedByUserId = new Guid("fd8eeeae-94c0-4f7c-ae8d-04274d13031b"),
                            Name = "Classic sandwich",
                            Price = 9.0,
                            RestaurantId = 1
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 8,
                            CreatedByUserId = new Guid("fd8eeeae-94c0-4f7c-ae8d-04274d13031b"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2280),
                            Description = "Chicken sandwich with tomato, lettuce and onions",
                            IsAvailable = true,
                            IsDeleted = false,
                            ModifiedByUserId = new Guid("fd8eeeae-94c0-4f7c-ae8d-04274d13031b"),
                            Name = "Chicken sandwich",
                            Price = 10.0,
                            RestaurantId = 1
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 8,
                            CreatedByUserId = new Guid("fd8eeeae-94c0-4f7c-ae8d-04274d13031b"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2283),
                            Description = "Pepperoni sandwich with tomato, lettuce and onions",
                            IsAvailable = true,
                            IsDeleted = false,
                            ModifiedByUserId = new Guid("fd8eeeae-94c0-4f7c-ae8d-04274d13031b"),
                            Name = "Pepperoni sandwich",
                            Price = 10.0,
                            RestaurantId = 1
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 10,
                            CreatedByUserId = new Guid("fd8eeeae-94c0-4f7c-ae8d-04274d13031b"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2286),
                            Description = "Homemade chocolate cake, original recipe",
                            IsAvailable = true,
                            IsDeleted = false,
                            ModifiedByUserId = new Guid("fd8eeeae-94c0-4f7c-ae8d-04274d13031b"),
                            Name = "Sacher-Torte",
                            Price = 4.0,
                            RestaurantId = 1
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 10,
                            CreatedByUserId = new Guid("fd8eeeae-94c0-4f7c-ae8d-04274d13031b"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2289),
                            Description = "Homemade baklava, original recipe",
                            IsAvailable = true,
                            IsDeleted = false,
                            ModifiedByUserId = new Guid("fd8eeeae-94c0-4f7c-ae8d-04274d13031b"),
                            Name = "Baklava",
                            Price = 4.0,
                            RestaurantId = 1
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 11,
                            CreatedByUserId = new Guid("fd8eeeae-94c0-4f7c-ae8d-04274d13031b"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2293),
                            Description = "Nutella filled pancakakes",
                            IsAvailable = true,
                            IsDeleted = false,
                            ModifiedByUserId = new Guid("fd8eeeae-94c0-4f7c-ae8d-04274d13031b"),
                            Name = "Nutella pancakes",
                            Price = 7.0,
                            RestaurantId = 1
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = 11,
                            CreatedByUserId = new Guid("fd8eeeae-94c0-4f7c-ae8d-04274d13031b"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2296),
                            Description = "Strawberry jam filled pancakakes",
                            IsAvailable = true,
                            IsDeleted = false,
                            ModifiedByUserId = new Guid("fd8eeeae-94c0-4f7c-ae8d-04274d13031b"),
                            Name = "Jam pancakes",
                            Price = 6.0,
                            RestaurantId = 1
                        },
                        new
                        {
                            Id = 15,
                            CategoryId = 2,
                            CreatedByUserId = new Guid("bcc3036b-fcde-4aae-8d5a-7d3b85a91310"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2299),
                            Description = "Regular pizza with cheese",
                            IsAvailable = true,
                            IsDeleted = false,
                            ModifiedByUserId = new Guid("bcc3036b-fcde-4aae-8d5a-7d3b85a91310"),
                            Name = "Margarita",
                            Price = 8.0,
                            RestaurantId = 2
                        },
                        new
                        {
                            Id = 16,
                            CategoryId = 2,
                            CreatedByUserId = new Guid("bcc3036b-fcde-4aae-8d5a-7d3b85a91310"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2302),
                            Description = "Pizza with salami and mushrooms",
                            IsAvailable = true,
                            IsDeleted = false,
                            ModifiedByUserId = new Guid("bcc3036b-fcde-4aae-8d5a-7d3b85a91310"),
                            Name = "Capricciosa",
                            Price = 10.0,
                            RestaurantId = 2
                        },
                        new
                        {
                            Id = 17,
                            CategoryId = 2,
                            CreatedByUserId = new Guid("bcc3036b-fcde-4aae-8d5a-7d3b85a91310"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2305),
                            Description = "Pizza with mushrooms",
                            IsAvailable = true,
                            IsDeleted = false,
                            ModifiedByUserId = new Guid("bcc3036b-fcde-4aae-8d5a-7d3b85a91310"),
                            Name = "Funghi",
                            Price = 9.0,
                            RestaurantId = 2
                        },
                        new
                        {
                            Id = 18,
                            CategoryId = 2,
                            CreatedByUserId = new Guid("bcc3036b-fcde-4aae-8d5a-7d3b85a91310"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2360),
                            Description = "Pizza with pepperoni sausage",
                            IsAvailable = true,
                            IsDeleted = false,
                            ModifiedByUserId = new Guid("bcc3036b-fcde-4aae-8d5a-7d3b85a91310"),
                            Name = "Pepperoni",
                            Price = 11.0,
                            RestaurantId = 2
                        },
                        new
                        {
                            Id = 19,
                            CategoryId = 5,
                            CreatedByUserId = new Guid("bcc3036b-fcde-4aae-8d5a-7d3b85a91310"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2363),
                            Description = "Chicken grilled fillets 100g",
                            IsAvailable = true,
                            IsDeleted = false,
                            ModifiedByUserId = new Guid("bcc3036b-fcde-4aae-8d5a-7d3b85a91310"),
                            Name = "Chicken fillets",
                            Price = 9.0,
                            RestaurantId = 2
                        },
                        new
                        {
                            Id = 20,
                            CategoryId = 5,
                            CreatedByUserId = new Guid("bcc3036b-fcde-4aae-8d5a-7d3b85a91310"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2366),
                            Description = "5 ćevapi with bread and onions",
                            IsAvailable = true,
                            IsDeleted = false,
                            ModifiedByUserId = new Guid("bcc3036b-fcde-4aae-8d5a-7d3b85a91310"),
                            Name = "ćevapi small portion",
                            Price = 5.0,
                            RestaurantId = 2
                        },
                        new
                        {
                            Id = 21,
                            CategoryId = 5,
                            CreatedByUserId = new Guid("bcc3036b-fcde-4aae-8d5a-7d3b85a91310"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2369),
                            Description = "10 ćevapi with bread and onions",
                            IsAvailable = true,
                            IsDeleted = false,
                            ModifiedByUserId = new Guid("bcc3036b-fcde-4aae-8d5a-7d3b85a91310"),
                            Name = "ćevapi large portion",
                            Price = 9.0,
                            RestaurantId = 2
                        },
                        new
                        {
                            Id = 22,
                            CategoryId = 6,
                            CreatedByUserId = new Guid("bcc3036b-fcde-4aae-8d5a-7d3b85a91310"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2372),
                            Description = "",
                            IsAvailable = true,
                            IsDeleted = false,
                            ModifiedByUserId = new Guid("bcc3036b-fcde-4aae-8d5a-7d3b85a91310"),
                            Name = "Greek salad",
                            Price = 6.0,
                            RestaurantId = 2
                        },
                        new
                        {
                            Id = 23,
                            CategoryId = 7,
                            CreatedByUserId = new Guid("bcc3036b-fcde-4aae-8d5a-7d3b85a91310"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2376),
                            Description = "Tomato and onions",
                            IsAvailable = true,
                            IsDeleted = false,
                            ModifiedByUserId = new Guid("bcc3036b-fcde-4aae-8d5a-7d3b85a91310"),
                            Name = "Tomato salad",
                            Price = 4.0,
                            RestaurantId = 2
                        },
                        new
                        {
                            Id = 24,
                            CategoryId = 7,
                            CreatedByUserId = new Guid("bcc3036b-fcde-4aae-8d5a-7d3b85a91310"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2379),
                            Description = "Lettuce, tomato and onions",
                            IsAvailable = true,
                            IsDeleted = false,
                            ModifiedByUserId = new Guid("bcc3036b-fcde-4aae-8d5a-7d3b85a91310"),
                            Name = "Regular salad",
                            Price = 4.0,
                            RestaurantId = 2
                        },
                        new
                        {
                            Id = 25,
                            CategoryId = 8,
                            CreatedByUserId = new Guid("bcc3036b-fcde-4aae-8d5a-7d3b85a91310"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2382),
                            Description = "Salami and cheese with lettuce, tomato and onions",
                            IsAvailable = true,
                            IsDeleted = false,
                            ModifiedByUserId = new Guid("bcc3036b-fcde-4aae-8d5a-7d3b85a91310"),
                            Name = "Classic sandwich ",
                            Price = 6.0,
                            RestaurantId = 2
                        },
                        new
                        {
                            Id = 26,
                            CategoryId = 8,
                            CreatedByUserId = new Guid("bcc3036b-fcde-4aae-8d5a-7d3b85a91310"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2385),
                            Description = "Chicken and cheese with lettuce, tomato and onions",
                            IsAvailable = true,
                            IsDeleted = false,
                            ModifiedByUserId = new Guid("bcc3036b-fcde-4aae-8d5a-7d3b85a91310"),
                            Name = "Chicken sandwich ",
                            Price = 7.5,
                            RestaurantId = 2
                        },
                        new
                        {
                            Id = 27,
                            CategoryId = 11,
                            CreatedByUserId = new Guid("bcc3036b-fcde-4aae-8d5a-7d3b85a91310"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2388),
                            Description = "Pancakes filled with nutella",
                            IsAvailable = true,
                            IsDeleted = false,
                            ModifiedByUserId = new Guid("bcc3036b-fcde-4aae-8d5a-7d3b85a91310"),
                            Name = "Nutella pancakes ",
                            Price = 7.0,
                            RestaurantId = 2
                        },
                        new
                        {
                            Id = 28,
                            CategoryId = 4,
                            CreatedByUserId = new Guid("a6262414-844d-4003-9184-1a39fcc8d621"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2390),
                            Description = "",
                            IsAvailable = true,
                            IsDeleted = false,
                            ModifiedByUserId = new Guid("a6262414-844d-4003-9184-1a39fcc8d621"),
                            Name = "Stuffed squid",
                            Price = 15.0,
                            RestaurantId = 3
                        },
                        new
                        {
                            Id = 29,
                            CategoryId = 4,
                            CreatedByUserId = new Guid("a6262414-844d-4003-9184-1a39fcc8d621"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2393),
                            Description = "",
                            IsAvailable = true,
                            IsDeleted = false,
                            ModifiedByUserId = new Guid("a6262414-844d-4003-9184-1a39fcc8d621"),
                            Name = "Fried squid",
                            Price = 15.0,
                            RestaurantId = 3
                        },
                        new
                        {
                            Id = 30,
                            CategoryId = 4,
                            CreatedByUserId = new Guid("a6262414-844d-4003-9184-1a39fcc8d621"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2397),
                            Description = "Filled with cream",
                            IsAvailable = true,
                            IsDeleted = false,
                            ModifiedByUserId = new Guid("a6262414-844d-4003-9184-1a39fcc8d621"),
                            Name = "Neretvan trout filled",
                            Price = 15.0,
                            RestaurantId = 3
                        },
                        new
                        {
                            Id = 31,
                            CategoryId = 4,
                            CreatedByUserId = new Guid("a6262414-844d-4003-9184-1a39fcc8d621"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2400),
                            Description = "",
                            IsAvailable = true,
                            IsDeleted = false,
                            ModifiedByUserId = new Guid("a6262414-844d-4003-9184-1a39fcc8d621"),
                            Name = "Neretvan trout",
                            Price = 13.0,
                            RestaurantId = 3
                        },
                        new
                        {
                            Id = 32,
                            CategoryId = 5,
                            CreatedByUserId = new Guid("a6262414-844d-4003-9184-1a39fcc8d621"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2403),
                            Description = "",
                            IsAvailable = true,
                            IsDeleted = false,
                            ModifiedByUserId = new Guid("a6262414-844d-4003-9184-1a39fcc8d621"),
                            Name = "Beefsteak",
                            Price = 20.0,
                            RestaurantId = 3
                        },
                        new
                        {
                            Id = 33,
                            CategoryId = 5,
                            CreatedByUserId = new Guid("a6262414-844d-4003-9184-1a39fcc8d621"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2405),
                            Description = "",
                            IsAvailable = true,
                            IsDeleted = false,
                            ModifiedByUserId = new Guid("a6262414-844d-4003-9184-1a39fcc8d621"),
                            Name = "Chicken skewers small",
                            Price = 6.0,
                            RestaurantId = 3
                        },
                        new
                        {
                            Id = 34,
                            CategoryId = 5,
                            CreatedByUserId = new Guid("a6262414-844d-4003-9184-1a39fcc8d621"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2409),
                            Description = "",
                            IsAvailable = true,
                            IsDeleted = false,
                            ModifiedByUserId = new Guid("a6262414-844d-4003-9184-1a39fcc8d621"),
                            Name = "Chicken skewers large",
                            Price = 10.0,
                            RestaurantId = 3
                        },
                        new
                        {
                            Id = 35,
                            CategoryId = 5,
                            CreatedByUserId = new Guid("a6262414-844d-4003-9184-1a39fcc8d621"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2412),
                            Description = "",
                            IsAvailable = true,
                            IsDeleted = false,
                            ModifiedByUserId = new Guid("a6262414-844d-4003-9184-1a39fcc8d621"),
                            Name = "Ćevapi (small)",
                            Price = 5.0,
                            RestaurantId = 3
                        },
                        new
                        {
                            Id = 36,
                            CategoryId = 5,
                            CreatedByUserId = new Guid("a6262414-844d-4003-9184-1a39fcc8d621"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2415),
                            Description = "",
                            IsAvailable = true,
                            IsDeleted = false,
                            ModifiedByUserId = new Guid("a6262414-844d-4003-9184-1a39fcc8d621"),
                            Name = "Ćevapi (large)",
                            Price = 9.0,
                            RestaurantId = 3
                        },
                        new
                        {
                            Id = 37,
                            CategoryId = 7,
                            CreatedByUserId = new Guid("a6262414-844d-4003-9184-1a39fcc8d621"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2418),
                            Description = "",
                            IsAvailable = true,
                            IsDeleted = false,
                            ModifiedByUserId = new Guid("a6262414-844d-4003-9184-1a39fcc8d621"),
                            Name = "Green salad",
                            Price = 3.0,
                            RestaurantId = 3
                        },
                        new
                        {
                            Id = 38,
                            CategoryId = 7,
                            CreatedByUserId = new Guid("a6262414-844d-4003-9184-1a39fcc8d621"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2421),
                            Description = "",
                            IsAvailable = true,
                            IsDeleted = false,
                            ModifiedByUserId = new Guid("a6262414-844d-4003-9184-1a39fcc8d621"),
                            Name = "Tomato salad",
                            Price = 3.0,
                            RestaurantId = 3
                        },
                        new
                        {
                            Id = 39,
                            CategoryId = 6,
                            CreatedByUserId = new Guid("a6262414-844d-4003-9184-1a39fcc8d621"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2424),
                            Description = "",
                            IsAvailable = true,
                            IsDeleted = false,
                            ModifiedByUserId = new Guid("a6262414-844d-4003-9184-1a39fcc8d621"),
                            Name = "Salad with cheese",
                            Price = 4.0,
                            RestaurantId = 3
                        },
                        new
                        {
                            Id = 40,
                            CategoryId = 11,
                            CreatedByUserId = new Guid("a6262414-844d-4003-9184-1a39fcc8d621"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2427),
                            Description = "",
                            IsAvailable = true,
                            IsDeleted = false,
                            ModifiedByUserId = new Guid("a6262414-844d-4003-9184-1a39fcc8d621"),
                            Name = "Nutella pancakes",
                            Price = 6.0,
                            RestaurantId = 3
                        },
                        new
                        {
                            Id = 41,
                            CategoryId = 10,
                            CreatedByUserId = new Guid("a6262414-844d-4003-9184-1a39fcc8d621"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2430),
                            Description = "",
                            IsAvailable = true,
                            IsDeleted = false,
                            ModifiedByUserId = new Guid("a6262414-844d-4003-9184-1a39fcc8d621"),
                            Name = "Baklava",
                            Price = 4.0,
                            RestaurantId = 3
                        },
                        new
                        {
                            Id = 42,
                            CategoryId = 5,
                            CreatedByUserId = new Guid("6c932e9e-d350-4103-bd77-c2716d6f4a1f"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2434),
                            Description = "",
                            IsAvailable = true,
                            IsDeleted = false,
                            ModifiedByUserId = new Guid("6c932e9e-d350-4103-bd77-c2716d6f4a1f"),
                            Name = "Ćevapi (small)",
                            Price = 5.0,
                            RestaurantId = 4
                        },
                        new
                        {
                            Id = 43,
                            CategoryId = 5,
                            CreatedByUserId = new Guid("6c932e9e-d350-4103-bd77-c2716d6f4a1f"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2437),
                            Description = "",
                            IsAvailable = true,
                            IsDeleted = false,
                            ModifiedByUserId = new Guid("6c932e9e-d350-4103-bd77-c2716d6f4a1f"),
                            Name = "Ćevapi (large)",
                            Price = 9.0,
                            RestaurantId = 4
                        },
                        new
                        {
                            Id = 44,
                            CategoryId = 5,
                            CreatedByUserId = new Guid("6c932e9e-d350-4103-bd77-c2716d6f4a1f"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2444),
                            Description = "",
                            IsAvailable = true,
                            IsDeleted = false,
                            ModifiedByUserId = new Guid("6c932e9e-d350-4103-bd77-c2716d6f4a1f"),
                            Name = "Chicken fillets",
                            Price = 6.0,
                            RestaurantId = 4
                        },
                        new
                        {
                            Id = 45,
                            CategoryId = 11,
                            CreatedByUserId = new Guid("6c932e9e-d350-4103-bd77-c2716d6f4a1f"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2446),
                            Description = "",
                            IsAvailable = true,
                            IsDeleted = false,
                            ModifiedByUserId = new Guid("6c932e9e-d350-4103-bd77-c2716d6f4a1f"),
                            Name = "Nutella pancakes",
                            Price = 6.0,
                            RestaurantId = 4
                        },
                        new
                        {
                            Id = 46,
                            CategoryId = 10,
                            CreatedByUserId = new Guid("6c932e9e-d350-4103-bd77-c2716d6f4a1f"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2449),
                            Description = "",
                            IsAvailable = true,
                            IsDeleted = false,
                            ModifiedByUserId = new Guid("6c932e9e-d350-4103-bd77-c2716d6f4a1f"),
                            Name = "Baklava",
                            Price = 4.0,
                            RestaurantId = 4
                        },
                        new
                        {
                            Id = 47,
                            CategoryId = 9,
                            CreatedByUserId = new Guid("6c932e9e-d350-4103-bd77-c2716d6f4a1f"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2452),
                            Description = "",
                            IsAvailable = true,
                            IsDeleted = false,
                            ModifiedByUserId = new Guid("6c932e9e-d350-4103-bd77-c2716d6f4a1f"),
                            Name = "Dolma",
                            Price = 8.0,
                            RestaurantId = 4
                        },
                        new
                        {
                            Id = 48,
                            CategoryId = 9,
                            CreatedByUserId = new Guid("6c932e9e-d350-4103-bd77-c2716d6f4a1f"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2455),
                            Description = "",
                            IsAvailable = true,
                            IsDeleted = false,
                            ModifiedByUserId = new Guid("6c932e9e-d350-4103-bd77-c2716d6f4a1f"),
                            Name = "Japrak",
                            Price = 7.0,
                            RestaurantId = 4
                        },
                        new
                        {
                            Id = 49,
                            CategoryId = 9,
                            CreatedByUserId = new Guid("6c932e9e-d350-4103-bd77-c2716d6f4a1f"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2490),
                            Description = "",
                            IsAvailable = true,
                            IsDeleted = false,
                            ModifiedByUserId = new Guid("6c932e9e-d350-4103-bd77-c2716d6f4a1f"),
                            Name = "Biber meso",
                            Price = 8.5,
                            RestaurantId = 4
                        },
                        new
                        {
                            Id = 50,
                            CategoryId = 9,
                            CreatedByUserId = new Guid("6c932e9e-d350-4103-bd77-c2716d6f4a1f"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2493),
                            Description = "",
                            IsAvailable = true,
                            IsDeleted = false,
                            ModifiedByUserId = new Guid("6c932e9e-d350-4103-bd77-c2716d6f4a1f"),
                            Name = "Bosnian pot",
                            Price = 7.0,
                            RestaurantId = 4
                        },
                        new
                        {
                            Id = 51,
                            CategoryId = 1,
                            CreatedByUserId = new Guid("6f43201b-919e-471f-9ca7-4f4d0c74ca39"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2497),
                            Description = "Juicy beef patty with tomato, salad, onions",
                            IsAvailable = true,
                            IsDeleted = false,
                            ModifiedByUserId = new Guid("6f43201b-919e-471f-9ca7-4f4d0c74ca39"),
                            Name = "Hamburger",
                            Price = 9.0,
                            RestaurantId = 5
                        },
                        new
                        {
                            Id = 52,
                            CategoryId = 1,
                            CreatedByUserId = new Guid("6f43201b-919e-471f-9ca7-4f4d0c74ca39"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2500),
                            Description = "Juicy beef patty with tomato, salad, onions and cheese",
                            IsAvailable = true,
                            IsDeleted = false,
                            ModifiedByUserId = new Guid("6f43201b-919e-471f-9ca7-4f4d0c74ca39"),
                            Name = "Cheeseburger",
                            Price = 11.0,
                            RestaurantId = 5
                        },
                        new
                        {
                            Id = 53,
                            CategoryId = 2,
                            CreatedByUserId = new Guid("6f43201b-919e-471f-9ca7-4f4d0c74ca39"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2503),
                            Description = "Regular pizza with Gauda cheese",
                            IsAvailable = true,
                            IsDeleted = false,
                            ModifiedByUserId = new Guid("6f43201b-919e-471f-9ca7-4f4d0c74ca39"),
                            Name = "Margarita",
                            Price = 9.0,
                            RestaurantId = 5
                        },
                        new
                        {
                            Id = 54,
                            CategoryId = 2,
                            CreatedByUserId = new Guid("6f43201b-919e-471f-9ca7-4f4d0c74ca39"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2506),
                            Description = "Pizza with salami and mushrooms",
                            IsAvailable = true,
                            IsDeleted = false,
                            ModifiedByUserId = new Guid("6f43201b-919e-471f-9ca7-4f4d0c74ca39"),
                            Name = "Capricciosa",
                            Price = 11.0,
                            RestaurantId = 5
                        },
                        new
                        {
                            Id = 55,
                            CategoryId = 6,
                            CreatedByUserId = new Guid("6f43201b-919e-471f-9ca7-4f4d0c74ca39"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2509),
                            Description = "",
                            IsAvailable = true,
                            IsDeleted = false,
                            ModifiedByUserId = new Guid("6f43201b-919e-471f-9ca7-4f4d0c74ca39"),
                            Name = "Salad with cheese",
                            Price = 4.0,
                            RestaurantId = 5
                        },
                        new
                        {
                            Id = 56,
                            CategoryId = 5,
                            CreatedByUserId = new Guid("6f43201b-919e-471f-9ca7-4f4d0c74ca39"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2511),
                            Description = "",
                            IsAvailable = true,
                            IsDeleted = false,
                            ModifiedByUserId = new Guid("6f43201b-919e-471f-9ca7-4f4d0c74ca39"),
                            Name = "Chicken fillets",
                            Price = 6.0,
                            RestaurantId = 5
                        },
                        new
                        {
                            Id = 57,
                            CategoryId = 8,
                            CreatedByUserId = new Guid("6f43201b-919e-471f-9ca7-4f4d0c74ca39"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2514),
                            Description = "Salami and cheese with lettuce, tomato and onions",
                            IsAvailable = true,
                            IsDeleted = false,
                            ModifiedByUserId = new Guid("6f43201b-919e-471f-9ca7-4f4d0c74ca39"),
                            Name = "Classic sandwich ",
                            Price = 6.0,
                            RestaurantId = 5
                        },
                        new
                        {
                            Id = 58,
                            CategoryId = 8,
                            CreatedByUserId = new Guid("6f43201b-919e-471f-9ca7-4f4d0c74ca39"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2517),
                            Description = "Chicken and cheese with lettuce, tomato and onions",
                            IsAvailable = true,
                            IsDeleted = false,
                            ModifiedByUserId = new Guid("6f43201b-919e-471f-9ca7-4f4d0c74ca39"),
                            Name = "Chicken sandwich ",
                            Price = 7.5,
                            RestaurantId = 5
                        },
                        new
                        {
                            Id = 59,
                            CategoryId = 10,
                            CreatedByUserId = new Guid("6f43201b-919e-471f-9ca7-4f4d0c74ca39"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2521),
                            Description = "Homemade baklava, original recipe",
                            IsAvailable = true,
                            IsDeleted = false,
                            ModifiedByUserId = new Guid("6f43201b-919e-471f-9ca7-4f4d0c74ca39"),
                            Name = "Baklava",
                            Price = 4.0,
                            RestaurantId = 5
                        },
                        new
                        {
                            Id = 60,
                            CategoryId = 11,
                            CreatedByUserId = new Guid("6f43201b-919e-471f-9ca7-4f4d0c74ca39"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2525),
                            Description = "Nutella filled pancakakes",
                            IsAvailable = true,
                            IsDeleted = false,
                            ModifiedByUserId = new Guid("6f43201b-919e-471f-9ca7-4f4d0c74ca39"),
                            Name = "Nutella pancakes",
                            Price = 7.0,
                            RestaurantId = 5
                        },
                        new
                        {
                            Id = 61,
                            CategoryId = 11,
                            CreatedByUserId = new Guid("6f43201b-919e-471f-9ca7-4f4d0c74ca39"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2528),
                            Description = "Strawberry jam filled pancakakes",
                            IsAvailable = true,
                            IsDeleted = false,
                            ModifiedByUserId = new Guid("6f43201b-919e-471f-9ca7-4f4d0c74ca39"),
                            Name = "Jam pancakes",
                            Price = 6.0,
                            RestaurantId = 5
                        },
                        new
                        {
                            Id = 62,
                            CategoryId = 2,
                            CreatedByUserId = new Guid("e7286ada-7ad6-4bb4-8b0a-436141928671"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2531),
                            Description = "Regular pizza with Gauda cheese",
                            IsAvailable = true,
                            IsDeleted = false,
                            ModifiedByUserId = new Guid("e7286ada-7ad6-4bb4-8b0a-436141928671"),
                            Name = "Margarita",
                            Price = 9.0,
                            RestaurantId = 6
                        },
                        new
                        {
                            Id = 63,
                            CategoryId = 2,
                            CreatedByUserId = new Guid("e7286ada-7ad6-4bb4-8b0a-436141928671"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2534),
                            Description = "Pizza with salami and mushrooms",
                            IsAvailable = true,
                            IsDeleted = false,
                            ModifiedByUserId = new Guid("e7286ada-7ad6-4bb4-8b0a-436141928671"),
                            Name = "Capricciosa",
                            Price = 11.0,
                            RestaurantId = 6
                        },
                        new
                        {
                            Id = 64,
                            CategoryId = 3,
                            CreatedByUserId = new Guid("e7286ada-7ad6-4bb4-8b0a-436141928671"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2537),
                            Description = "",
                            IsAvailable = true,
                            IsDeleted = false,
                            ModifiedByUserId = new Guid("e7286ada-7ad6-4bb4-8b0a-436141928671"),
                            Name = "Carbonara",
                            Price = 11.0,
                            RestaurantId = 6
                        },
                        new
                        {
                            Id = 65,
                            CategoryId = 3,
                            CreatedByUserId = new Guid("e7286ada-7ad6-4bb4-8b0a-436141928671"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2540),
                            Description = "",
                            IsAvailable = true,
                            IsDeleted = false,
                            ModifiedByUserId = new Guid("e7286ada-7ad6-4bb4-8b0a-436141928671"),
                            Name = "Bolognese",
                            Price = 12.0,
                            RestaurantId = 6
                        },
                        new
                        {
                            Id = 66,
                            CategoryId = 3,
                            CreatedByUserId = new Guid("e7286ada-7ad6-4bb4-8b0a-436141928671"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2544),
                            Description = "",
                            IsAvailable = true,
                            IsDeleted = false,
                            ModifiedByUserId = new Guid("e7286ada-7ad6-4bb4-8b0a-436141928671"),
                            Name = "Pesto",
                            Price = 10.0,
                            RestaurantId = 6
                        },
                        new
                        {
                            Id = 67,
                            CategoryId = 3,
                            CreatedByUserId = new Guid("e7286ada-7ad6-4bb4-8b0a-436141928671"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2547),
                            Description = "",
                            IsAvailable = true,
                            IsDeleted = false,
                            ModifiedByUserId = new Guid("e7286ada-7ad6-4bb4-8b0a-436141928671"),
                            Name = "Lasagne bolognese",
                            Price = 14.0,
                            RestaurantId = 6
                        },
                        new
                        {
                            Id = 68,
                            CategoryId = 10,
                            CreatedByUserId = new Guid("e7286ada-7ad6-4bb4-8b0a-436141928671"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2550),
                            Description = "",
                            IsAvailable = true,
                            IsDeleted = false,
                            ModifiedByUserId = new Guid("e7286ada-7ad6-4bb4-8b0a-436141928671"),
                            Name = "Baklava",
                            Price = 4.0,
                            RestaurantId = 6
                        },
                        new
                        {
                            Id = 69,
                            CategoryId = 11,
                            CreatedByUserId = new Guid("e7286ada-7ad6-4bb4-8b0a-436141928671"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2553),
                            Description = "",
                            IsAvailable = true,
                            IsDeleted = false,
                            ModifiedByUserId = new Guid("e7286ada-7ad6-4bb4-8b0a-436141928671"),
                            Name = "Jam pancakes",
                            Price = 6.0,
                            RestaurantId = 6
                        });
                });

            modelBuilder.Entity("e_Delivery.Entities.FoodItemPictures", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FileSize")
                        .HasColumnType("int");

                    b.Property<int>("FoodItemId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FoodItemId");

                    b.ToTable("FoodItemPictures");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FileName = "https://localhost:44395/FoodItem_images/hamburger.jpg",
                            FileSize = 135168,
                            FoodItemId = 1
                        },
                        new
                        {
                            Id = 2,
                            FileName = "https://localhost:44395/FoodItem_images/cheeseburger.jpg",
                            FileSize = 57306,
                            FoodItemId = 2
                        },
                        new
                        {
                            Id = 3,
                            FileName = "https://localhost:44395/FoodItem_images/margarita.jpg",
                            FileSize = 85319,
                            FoodItemId = 3
                        },
                        new
                        {
                            Id = 4,
                            FileName = "https://localhost:44395/FoodItem_images/capricoza.jpg",
                            FileSize = 69759,
                            FoodItemId = 4
                        },
                        new
                        {
                            Id = 5,
                            FileName = "https://localhost:44395/FoodItem_images/funghi.jpg",
                            FileSize = 308224,
                            FoodItemId = 5
                        },
                        new
                        {
                            Id = 6,
                            FileName = "https://localhost:44395/FoodItem_images/fileti.jpg",
                            FileSize = 59801,
                            FoodItemId = 6
                        },
                        new
                        {
                            Id = 7,
                            FileName = "https://localhost:44395/FoodItem_images/sausage.jpg",
                            FileSize = 10547,
                            FoodItemId = 7
                        },
                        new
                        {
                            Id = 8,
                            FileName = "https://localhost:44395/FoodItem_images/sendvicklasik.jpg",
                            FileSize = 197632,
                            FoodItemId = 8
                        },
                        new
                        {
                            Id = 9,
                            FileName = "https://localhost:44395/FoodItem_images/chickensendvic.jpg",
                            FileSize = 238592,
                            FoodItemId = 9
                        },
                        new
                        {
                            Id = 10,
                            FileName = "https://localhost:44395/FoodItem_images/pepperoni.jpg",
                            FileSize = 52838,
                            FoodItemId = 10
                        },
                        new
                        {
                            Id = 11,
                            FileName = "https://localhost:44395/FoodItem_images/sacher.jpg",
                            FileSize = 147456,
                            FoodItemId = 11
                        },
                        new
                        {
                            Id = 12,
                            FileName = "https://localhost:44395/FoodItem_images/baklava.jpg",
                            FileSize = 64307,
                            FoodItemId = 12
                        },
                        new
                        {
                            Id = 13,
                            FileName = "https://localhost:44395/FoodItem_images/nutellapalacinke.jpg",
                            FileSize = 103424,
                            FoodItemId = 13
                        },
                        new
                        {
                            Id = 14,
                            FileName = "https://localhost:44395/FoodItem_images/dzempalacinke.jpg",
                            FileSize = 11366,
                            FoodItemId = 14
                        },
                        new
                        {
                            Id = 15,
                            FileName = "https://localhost:44395/FoodItem_images/margarita.jpg",
                            FileSize = 85319,
                            FoodItemId = 15
                        },
                        new
                        {
                            Id = 16,
                            FileName = "https://localhost:44395/FoodItem_images/capricoza.jpg",
                            FileSize = 69759,
                            FoodItemId = 16
                        },
                        new
                        {
                            Id = 17,
                            FileName = "https://localhost:44395/FoodItem_images/funghi.jpg",
                            FileSize = 308224,
                            FoodItemId = 17
                        },
                        new
                        {
                            Id = 18,
                            FileName = "https://localhost:44395/FoodItem_images/pepperonipizza.jpg",
                            FileSize = 278528,
                            FoodItemId = 18
                        },
                        new
                        {
                            Id = 19,
                            FileName = "https://localhost:44395/FoodItem_images/fileti.jpg",
                            FileSize = 59801,
                            FoodItemId = 19
                        },
                        new
                        {
                            Id = 20,
                            FileName = "https://localhost:44395/FoodItem_images/cevapi.jpg",
                            FileSize = 7469,
                            FoodItemId = 20
                        },
                        new
                        {
                            Id = 21,
                            FileName = "https://localhost:44395/FoodItem_images/cevapi.jpg",
                            FileSize = 7469,
                            FoodItemId = 21
                        },
                        new
                        {
                            Id = 22,
                            FileName = "https://localhost:44395/FoodItem_images/greeksalad.jpg",
                            FileSize = 212992,
                            FoodItemId = 22
                        },
                        new
                        {
                            Id = 23,
                            FileName = "https://localhost:44395/FoodItem_images/tomatosalad.jpg",
                            FileSize = 320512,
                            FoodItemId = 23
                        },
                        new
                        {
                            Id = 24,
                            FileName = "https://localhost:44395/FoodItem_images/regularsalad.jpg",
                            FileSize = 253952,
                            FoodItemId = 24
                        },
                        new
                        {
                            Id = 25,
                            FileName = "https://localhost:44395/FoodItem_images/sendvicklasik.jpg",
                            FileSize = 197632,
                            FoodItemId = 25
                        },
                        new
                        {
                            Id = 26,
                            FileName = "https://localhost:44395/FoodItem_images/chickensendvic.jpg",
                            FileSize = 238592,
                            FoodItemId = 26
                        },
                        new
                        {
                            Id = 27,
                            FileName = "https://localhost:44395/FoodItem_images/nutellapalacinke.jpg",
                            FileSize = 103424,
                            FoodItemId = 27
                        },
                        new
                        {
                            Id = 28,
                            FileName = "https://localhost:44395/FoodItem_images/friedsquid.jpg",
                            FileSize = 354304,
                            FoodItemId = 28
                        },
                        new
                        {
                            Id = 29,
                            FileName = "https://localhost:44395/FoodItem_images/friedsquid.jpg",
                            FileSize = 354304,
                            FoodItemId = 29
                        },
                        new
                        {
                            Id = 30,
                            FileName = "https://localhost:44395/FoodItem_images/pastrmka.jpg",
                            FileSize = 11572,
                            FoodItemId = 30
                        },
                        new
                        {
                            Id = 31,
                            FileName = "https://localhost:44395/FoodItem_images/pastrmka.jpg",
                            FileSize = 11572,
                            FoodItemId = 31
                        },
                        new
                        {
                            Id = 32,
                            FileName = "https://localhost:44395/FoodItem_images/beefsteak.jpg",
                            FileSize = 138240,
                            FoodItemId = 32
                        },
                        new
                        {
                            Id = 33,
                            FileName = "https://localhost:44395/FoodItem_images/chickenskewers.jpg",
                            FileSize = 149504,
                            FoodItemId = 33
                        },
                        new
                        {
                            Id = 34,
                            FileName = "https://localhost:44395/FoodItem_images/chickenskewers.jpg",
                            FileSize = 149504,
                            FoodItemId = 34
                        },
                        new
                        {
                            Id = 35,
                            FileName = "https://localhost:44395/FoodItem_images/cevapi.jpg",
                            FileSize = 7469,
                            FoodItemId = 35
                        },
                        new
                        {
                            Id = 36,
                            FileName = "https://localhost:44395/FoodItem_images/cevapi.jpg",
                            FileSize = 7469,
                            FoodItemId = 36
                        },
                        new
                        {
                            Id = 37,
                            FileName = "https://localhost:44395/FoodItem_images/regularsalad.jpg",
                            FileSize = 253952,
                            FoodItemId = 37
                        },
                        new
                        {
                            Id = 38,
                            FileName = "https://localhost:44395/FoodItem_images/tomatosalad.jpg",
                            FileSize = 320512,
                            FoodItemId = 38
                        },
                        new
                        {
                            Id = 39,
                            FileName = "https://localhost:44395/FoodItem_images/greeksalad.jpg",
                            FileSize = 212992,
                            FoodItemId = 39
                        },
                        new
                        {
                            Id = 40,
                            FileName = "https://localhost:44395/FoodItem_images/nutellapalacinke.jpg",
                            FileSize = 103424,
                            FoodItemId = 40
                        },
                        new
                        {
                            Id = 41,
                            FileName = "https://localhost:44395/FoodItem_images/baklava.jpg",
                            FileSize = 64307,
                            FoodItemId = 41
                        },
                        new
                        {
                            Id = 42,
                            FileName = "https://localhost:44395/FoodItem_images/cevapi.jpg",
                            FileSize = 7469,
                            FoodItemId = 42
                        },
                        new
                        {
                            Id = 43,
                            FileName = "https://localhost:44395/FoodItem_images/cevapi.jpg",
                            FileSize = 7469,
                            FoodItemId = 43
                        },
                        new
                        {
                            Id = 44,
                            FileName = "https://localhost:44395/FoodItem_images/fileti.jpg",
                            FileSize = 59801,
                            FoodItemId = 44
                        },
                        new
                        {
                            Id = 45,
                            FileName = "https://localhost:44395/FoodItem_images/nutellapalacinke.jpg",
                            FileSize = 103424,
                            FoodItemId = 45
                        },
                        new
                        {
                            Id = 46,
                            FileName = "https://localhost:44395/FoodItem_images/baklava.jpg",
                            FileSize = 64307,
                            FoodItemId = 46
                        },
                        new
                        {
                            Id = 47,
                            FileName = "https://localhost:44395/FoodItem_images/dolma.jpg",
                            FileSize = 115712,
                            FoodItemId = 47
                        },
                        new
                        {
                            Id = 48,
                            FileName = "https://localhost:44395/FoodItem_images/japrak.jpg",
                            FileSize = 83251,
                            FoodItemId = 48
                        },
                        new
                        {
                            Id = 49,
                            FileName = "https://localhost:44395/FoodItem_images/bibermeso.jpg",
                            FileSize = 9011,
                            FoodItemId = 49
                        },
                        new
                        {
                            Id = 50,
                            FileName = "https://localhost:44395/FoodItem_images/bosanskilonac.jpg",
                            FileSize = 224256,
                            FoodItemId = 50
                        },
                        new
                        {
                            Id = 51,
                            FileName = "https://localhost:44395/FoodItem_images/hamburger.jpg",
                            FileSize = 135168,
                            FoodItemId = 51
                        },
                        new
                        {
                            Id = 52,
                            FileName = "https://localhost:44395/FoodItem_images/cheeseburger.jpg",
                            FileSize = 57306,
                            FoodItemId = 52
                        },
                        new
                        {
                            Id = 53,
                            FileName = "https://localhost:44395/FoodItem_images/margarita.jpg",
                            FileSize = 85319,
                            FoodItemId = 53
                        },
                        new
                        {
                            Id = 54,
                            FileName = "https://localhost:44395/FoodItem_images/capricoza.jpg",
                            FileSize = 69759,
                            FoodItemId = 54
                        },
                        new
                        {
                            Id = 55,
                            FileName = "https://localhost:44395/FoodItem_images/greeksalad.jpg",
                            FileSize = 212992,
                            FoodItemId = 55
                        },
                        new
                        {
                            Id = 56,
                            FileName = "https://localhost:44395/FoodItem_images/fileti.jpg",
                            FileSize = 59801,
                            FoodItemId = 56
                        },
                        new
                        {
                            Id = 57,
                            FileName = "https://localhost:44395/FoodItem_images/sendvicklasik.jpg",
                            FileSize = 197632,
                            FoodItemId = 57
                        },
                        new
                        {
                            Id = 58,
                            FileName = "https://localhost:44395/FoodItem_images/chickensendvic.jpg",
                            FileSize = 238592,
                            FoodItemId = 58
                        },
                        new
                        {
                            Id = 59,
                            FileName = "https://localhost:44395/FoodItem_images/baklava.jpg",
                            FileSize = 64307,
                            FoodItemId = 59
                        },
                        new
                        {
                            Id = 60,
                            FileName = "https://localhost:44395/FoodItem_images/nutellapalacinke.jpg",
                            FileSize = 103424,
                            FoodItemId = 60
                        },
                        new
                        {
                            Id = 61,
                            FileName = "https://localhost:44395/FoodItem_images/dzempalacinke.jpg",
                            FileSize = 11366,
                            FoodItemId = 61
                        },
                        new
                        {
                            Id = 62,
                            FileName = "https://localhost:44395/FoodItem_images/margarita.jpg",
                            FileSize = 85319,
                            FoodItemId = 62
                        },
                        new
                        {
                            Id = 63,
                            FileName = "https://localhost:44395/FoodItem_images/capricoza.jpg",
                            FileSize = 69759,
                            FoodItemId = 63
                        },
                        new
                        {
                            Id = 64,
                            FileName = "https://localhost:44395/FoodItem_images/carbonara.jpg",
                            FileSize = 129024,
                            FoodItemId = 64
                        },
                        new
                        {
                            Id = 65,
                            FileName = "https://localhost:44395/FoodItem_images/bolognese.jpg",
                            FileSize = 70144,
                            FoodItemId = 65
                        },
                        new
                        {
                            Id = 66,
                            FileName = "https://localhost:44395/FoodItem_images/pesto.jpg",
                            FileSize = 53760,
                            FoodItemId = 66
                        },
                        new
                        {
                            Id = 67,
                            FileName = "https://localhost:44395/FoodItem_images/lasagne.jpg",
                            FileSize = 62976,
                            FoodItemId = 67
                        },
                        new
                        {
                            Id = 68,
                            FileName = "https://localhost:44395/FoodItem_images/baklava.jpg",
                            FileSize = 64307,
                            FoodItemId = 68
                        },
                        new
                        {
                            Id = 69,
                            FileName = "https://localhost:44395/FoodItem_images/dzempalacinke.jpg",
                            FileSize = 11366,
                            FoodItemId = 69
                        });
                });

            modelBuilder.Entity("e_Delivery.Entities.FoodItemSideDishMapping", b =>
                {
                    b.Property<int>("FoodItemId")
                        .HasColumnType("int");

                    b.Property<int>("SideDishId")
                        .HasColumnType("int");

                    b.HasKey("FoodItemId", "SideDishId");

                    b.HasIndex("SideDishId");

                    b.ToTable("FoodItemSideDishMappings");

                    b.HasData(
                        new
                        {
                            FoodItemId = 1,
                            SideDishId = 1
                        },
                        new
                        {
                            FoodItemId = 1,
                            SideDishId = 2
                        },
                        new
                        {
                            FoodItemId = 1,
                            SideDishId = 4
                        },
                        new
                        {
                            FoodItemId = 2,
                            SideDishId = 1
                        },
                        new
                        {
                            FoodItemId = 2,
                            SideDishId = 2
                        },
                        new
                        {
                            FoodItemId = 2,
                            SideDishId = 4
                        },
                        new
                        {
                            FoodItemId = 3,
                            SideDishId = 1
                        },
                        new
                        {
                            FoodItemId = 3,
                            SideDishId = 2
                        },
                        new
                        {
                            FoodItemId = 3,
                            SideDishId = 5
                        },
                        new
                        {
                            FoodItemId = 4,
                            SideDishId = 1
                        },
                        new
                        {
                            FoodItemId = 4,
                            SideDishId = 2
                        },
                        new
                        {
                            FoodItemId = 4,
                            SideDishId = 5
                        },
                        new
                        {
                            FoodItemId = 5,
                            SideDishId = 1
                        },
                        new
                        {
                            FoodItemId = 5,
                            SideDishId = 2
                        },
                        new
                        {
                            FoodItemId = 5,
                            SideDishId = 5
                        },
                        new
                        {
                            FoodItemId = 6,
                            SideDishId = 1
                        },
                        new
                        {
                            FoodItemId = 6,
                            SideDishId = 2
                        },
                        new
                        {
                            FoodItemId = 6,
                            SideDishId = 4
                        },
                        new
                        {
                            FoodItemId = 7,
                            SideDishId = 1
                        },
                        new
                        {
                            FoodItemId = 7,
                            SideDishId = 2
                        },
                        new
                        {
                            FoodItemId = 7,
                            SideDishId = 4
                        },
                        new
                        {
                            FoodItemId = 8,
                            SideDishId = 1
                        },
                        new
                        {
                            FoodItemId = 8,
                            SideDishId = 2
                        },
                        new
                        {
                            FoodItemId = 8,
                            SideDishId = 3
                        },
                        new
                        {
                            FoodItemId = 9,
                            SideDishId = 1
                        },
                        new
                        {
                            FoodItemId = 9,
                            SideDishId = 2
                        },
                        new
                        {
                            FoodItemId = 9,
                            SideDishId = 3
                        },
                        new
                        {
                            FoodItemId = 10,
                            SideDishId = 1
                        },
                        new
                        {
                            FoodItemId = 10,
                            SideDishId = 2
                        },
                        new
                        {
                            FoodItemId = 10,
                            SideDishId = 3
                        },
                        new
                        {
                            FoodItemId = 13,
                            SideDishId = 6
                        },
                        new
                        {
                            FoodItemId = 14,
                            SideDishId = 6
                        },
                        new
                        {
                            FoodItemId = 15,
                            SideDishId = 7
                        },
                        new
                        {
                            FoodItemId = 15,
                            SideDishId = 8
                        },
                        new
                        {
                            FoodItemId = 16,
                            SideDishId = 7
                        },
                        new
                        {
                            FoodItemId = 16,
                            SideDishId = 8
                        },
                        new
                        {
                            FoodItemId = 17,
                            SideDishId = 7
                        },
                        new
                        {
                            FoodItemId = 17,
                            SideDishId = 8
                        },
                        new
                        {
                            FoodItemId = 18,
                            SideDishId = 7
                        },
                        new
                        {
                            FoodItemId = 18,
                            SideDishId = 8
                        },
                        new
                        {
                            FoodItemId = 19,
                            SideDishId = 7
                        },
                        new
                        {
                            FoodItemId = 19,
                            SideDishId = 8
                        },
                        new
                        {
                            FoodItemId = 20,
                            SideDishId = 8
                        },
                        new
                        {
                            FoodItemId = 21,
                            SideDishId = 8
                        },
                        new
                        {
                            FoodItemId = 25,
                            SideDishId = 7
                        },
                        new
                        {
                            FoodItemId = 25,
                            SideDishId = 8
                        },
                        new
                        {
                            FoodItemId = 25,
                            SideDishId = 9
                        },
                        new
                        {
                            FoodItemId = 26,
                            SideDishId = 7
                        },
                        new
                        {
                            FoodItemId = 26,
                            SideDishId = 8
                        },
                        new
                        {
                            FoodItemId = 26,
                            SideDishId = 9
                        },
                        new
                        {
                            FoodItemId = 27,
                            SideDishId = 10
                        },
                        new
                        {
                            FoodItemId = 32,
                            SideDishId = 12
                        },
                        new
                        {
                            FoodItemId = 32,
                            SideDishId = 13
                        },
                        new
                        {
                            FoodItemId = 32,
                            SideDishId = 15
                        },
                        new
                        {
                            FoodItemId = 33,
                            SideDishId = 12
                        },
                        new
                        {
                            FoodItemId = 33,
                            SideDishId = 13
                        },
                        new
                        {
                            FoodItemId = 34,
                            SideDishId = 12
                        },
                        new
                        {
                            FoodItemId = 34,
                            SideDishId = 13
                        },
                        new
                        {
                            FoodItemId = 35,
                            SideDishId = 13
                        },
                        new
                        {
                            FoodItemId = 35,
                            SideDishId = 14
                        },
                        new
                        {
                            FoodItemId = 36,
                            SideDishId = 13
                        },
                        new
                        {
                            FoodItemId = 36,
                            SideDishId = 14
                        },
                        new
                        {
                            FoodItemId = 37,
                            SideDishId = 16
                        },
                        new
                        {
                            FoodItemId = 37,
                            SideDishId = 17
                        },
                        new
                        {
                            FoodItemId = 38,
                            SideDishId = 16
                        },
                        new
                        {
                            FoodItemId = 38,
                            SideDishId = 17
                        },
                        new
                        {
                            FoodItemId = 39,
                            SideDishId = 16
                        },
                        new
                        {
                            FoodItemId = 39,
                            SideDishId = 17
                        },
                        new
                        {
                            FoodItemId = 42,
                            SideDishId = 20
                        },
                        new
                        {
                            FoodItemId = 42,
                            SideDishId = 21
                        },
                        new
                        {
                            FoodItemId = 43,
                            SideDishId = 20
                        },
                        new
                        {
                            FoodItemId = 43,
                            SideDishId = 21
                        },
                        new
                        {
                            FoodItemId = 44,
                            SideDishId = 20
                        },
                        new
                        {
                            FoodItemId = 51,
                            SideDishId = 22
                        },
                        new
                        {
                            FoodItemId = 51,
                            SideDishId = 23
                        },
                        new
                        {
                            FoodItemId = 52,
                            SideDishId = 22
                        },
                        new
                        {
                            FoodItemId = 52,
                            SideDishId = 23
                        },
                        new
                        {
                            FoodItemId = 53,
                            SideDishId = 22
                        },
                        new
                        {
                            FoodItemId = 53,
                            SideDishId = 23
                        },
                        new
                        {
                            FoodItemId = 54,
                            SideDishId = 22
                        },
                        new
                        {
                            FoodItemId = 54,
                            SideDishId = 23
                        },
                        new
                        {
                            FoodItemId = 55,
                            SideDishId = 27
                        },
                        new
                        {
                            FoodItemId = 56,
                            SideDishId = 22
                        },
                        new
                        {
                            FoodItemId = 56,
                            SideDishId = 23
                        },
                        new
                        {
                            FoodItemId = 57,
                            SideDishId = 22
                        },
                        new
                        {
                            FoodItemId = 57,
                            SideDishId = 23
                        },
                        new
                        {
                            FoodItemId = 57,
                            SideDishId = 24
                        },
                        new
                        {
                            FoodItemId = 58,
                            SideDishId = 22
                        },
                        new
                        {
                            FoodItemId = 58,
                            SideDishId = 23
                        },
                        new
                        {
                            FoodItemId = 58,
                            SideDishId = 24
                        },
                        new
                        {
                            FoodItemId = 60,
                            SideDishId = 25
                        },
                        new
                        {
                            FoodItemId = 60,
                            SideDishId = 26
                        },
                        new
                        {
                            FoodItemId = 61,
                            SideDishId = 25
                        },
                        new
                        {
                            FoodItemId = 61,
                            SideDishId = 26
                        },
                        new
                        {
                            FoodItemId = 62,
                            SideDishId = 29
                        },
                        new
                        {
                            FoodItemId = 62,
                            SideDishId = 30
                        },
                        new
                        {
                            FoodItemId = 63,
                            SideDishId = 29
                        },
                        new
                        {
                            FoodItemId = 63,
                            SideDishId = 30
                        },
                        new
                        {
                            FoodItemId = 67,
                            SideDishId = 31
                        });
                });

            modelBuilder.Entity("e_Delivery.Entities.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid?>("CreatedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UserProfilePictureId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("ModifiedByUserId");

                    b.HasIndex("UserProfilePictureId");

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedByUserId = new Guid("fd8eeeae-94c0-4f7c-ae8d-04274d13031b"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2120),
                            IsDeleted = false,
                            Path = "/Uploads/Images/f4af967c-1d73-4f02-a576-75e72d542411.jpg"
                        },
                        new
                        {
                            Id = 2,
                            CreatedByUserId = new Guid("bcc3036b-fcde-4aae-8d5a-7d3b85a91310"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2157),
                            IsDeleted = false,
                            Path = "/Uploads/Images/a38064f5-960d-43ce-9597-ed27fd588419.jpg"
                        },
                        new
                        {
                            Id = 3,
                            CreatedByUserId = new Guid("a6262414-844d-4003-9184-1a39fcc8d621"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2160),
                            IsDeleted = false,
                            Path = "/Uploads/Images/radobolja.jpg"
                        },
                        new
                        {
                            Id = 4,
                            CreatedByUserId = new Guid("6c932e9e-d350-4103-bd77-c2716d6f4a1f"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2162),
                            IsDeleted = false,
                            Path = "/Uploads/Images/dva-fenjera.jpg"
                        },
                        new
                        {
                            Id = 5,
                            CreatedByUserId = new Guid("6f43201b-919e-471f-9ca7-4f4d0c74ca39"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2164),
                            IsDeleted = false,
                            Path = "/Uploads/Images/48d82799-50bb-46c7-a655-f6860c8877a9.jpg"
                        },
                        new
                        {
                            Id = 6,
                            CreatedByUserId = new Guid("e7286ada-7ad6-4bb4-8b0a-436141928671"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2167),
                            IsDeleted = false,
                            Path = "/Uploads/Images/megi.jpg"
                        },
                        new
                        {
                            Id = 7,
                            CreatedByUserId = new Guid("b8396f1d-a29a-4856-a4c1-1312dc97a4a1"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2169),
                            IsDeleted = false,
                            Path = "/Uploads/Images/9c3affff-791b-4680-8168-13d0b632cf8e.jpg",
                            UserProfilePictureId = new Guid("b8396f1d-a29a-4856-a4c1-1312dc97a4a1")
                        },
                        new
                        {
                            Id = 8,
                            CreatedByUserId = new Guid("b8cd72fb-eac5-40d5-8b22-7e8d601e2760"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2172),
                            IsDeleted = false,
                            Path = "/Uploads/Images/ed3a87b4-3710-4484-893d-ae4751014dab.jpg",
                            UserProfilePictureId = new Guid("b8cd72fb-eac5-40d5-8b22-7e8d601e2760")
                        },
                        new
                        {
                            Id = 9,
                            CreatedByUserId = new Guid("1bb03af4-c9c6-42f4-8153-dfd0e427bb43"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2174),
                            IsDeleted = false,
                            Path = "/Uploads/Images/employee4.jpg",
                            UserProfilePictureId = new Guid("1bb03af4-c9c6-42f4-8153-dfd0e427bb43")
                        },
                        new
                        {
                            Id = 10,
                            CreatedByUserId = new Guid("bb5f8b53-1b9c-404f-86c4-6c6036102045"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2177),
                            IsDeleted = false,
                            Path = "/Uploads/Images/customer.jpg",
                            UserProfilePictureId = new Guid("bb5f8b53-1b9c-404f-86c4-6c6036102045")
                        },
                        new
                        {
                            Id = 11,
                            CreatedByUserId = new Guid("29f648d1-4b82-4bf9-be7c-dc690b6edbf9"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2180),
                            IsDeleted = false,
                            Path = "/Uploads/Images/customer1.jpg",
                            UserProfilePictureId = new Guid("29f648d1-4b82-4bf9-be7c-dc690b6edbf9")
                        },
                        new
                        {
                            Id = 12,
                            CreatedByUserId = new Guid("531cbf7f-0aa1-44b2-8186-83867ac6e257"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2183),
                            IsDeleted = false,
                            Path = "/Uploads/Images/customer2.jpg",
                            UserProfilePictureId = new Guid("531cbf7f-0aa1-44b2-8186-83867ac6e257")
                        });
                });

            modelBuilder.Entity("e_Delivery.Entities.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<Guid?>("CreatedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Latitude")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Longitude")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("ModifiedByUserId");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityId = 1,
                            CreatedByUserId = new Guid("fd8eeeae-94c0-4f7c-ae8d-04274d13031b"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2042),
                            IsDeleted = false,
                            Latitude = "43.34205",
                            Longitude = "17.80042"
                        },
                        new
                        {
                            Id = 2,
                            CityId = 1,
                            CreatedByUserId = new Guid("bcc3036b-fcde-4aae-8d5a-7d3b85a91310"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2048),
                            IsDeleted = false,
                            Latitude = "43.34042",
                            Longitude = "17.81526"
                        },
                        new
                        {
                            Id = 3,
                            CityId = 1,
                            CreatedByUserId = new Guid("a6262414-844d-4003-9184-1a39fcc8d621"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2051),
                            IsDeleted = false,
                            Latitude = "43.33947",
                            Longitude = "17.80315"
                        },
                        new
                        {
                            Id = 4,
                            CityId = 1,
                            CreatedByUserId = new Guid("6c932e9e-d350-4103-bd77-c2716d6f4a1f"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2053),
                            IsDeleted = false,
                            Latitude = "43.31130",
                            Longitude = "17.83038"
                        },
                        new
                        {
                            Id = 5,
                            CityId = 1,
                            CreatedByUserId = new Guid("6f43201b-919e-471f-9ca7-4f4d0c74ca39"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2056),
                            IsDeleted = false,
                            Latitude = "43.33823",
                            Longitude = "17.81019"
                        },
                        new
                        {
                            Id = 6,
                            CityId = 1,
                            CreatedByUserId = new Guid("e7286ada-7ad6-4bb4-8b0a-436141928671"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2059),
                            IsDeleted = false,
                            Latitude = "43.35016",
                            Longitude = "17.80079"
                        },
                        new
                        {
                            Id = 7,
                            CityId = 1,
                            CreatedByUserId = new Guid("bb5f8b53-1b9c-404f-86c4-6c6036102045"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2061),
                            IsDeleted = false,
                            Latitude = "43.34731",
                            Longitude = "17.81352"
                        },
                        new
                        {
                            Id = 8,
                            CityId = 1,
                            CreatedByUserId = new Guid("bb5f8b53-1b9c-404f-86c4-6c6036102045"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2063),
                            IsDeleted = false,
                            Latitude = "43.34745",
                            Longitude = "17.81166"
                        },
                        new
                        {
                            Id = 9,
                            CityId = 1,
                            CreatedByUserId = new Guid("bb5f8b53-1b9c-404f-86c4-6c6036102045"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2065),
                            IsDeleted = false,
                            Latitude = "43.34666",
                            Longitude = "17.80534"
                        },
                        new
                        {
                            Id = 10,
                            CityId = 1,
                            CreatedByUserId = new Guid("bb5f8b53-1b9c-404f-86c4-6c6036102045"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2068),
                            IsDeleted = false,
                            Latitude = "43.34988",
                            Longitude = "17.80171"
                        },
                        new
                        {
                            Id = 11,
                            CityId = 1,
                            CreatedByUserId = new Guid("bb5f8b53-1b9c-404f-86c4-6c6036102045"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2070),
                            IsDeleted = false,
                            Latitude = "43.33786",
                            Longitude = "17.81581"
                        },
                        new
                        {
                            Id = 12,
                            CityId = 1,
                            CreatedByUserId = new Guid("bb5f8b53-1b9c-404f-86c4-6c6036102045"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2073),
                            IsDeleted = false,
                            Latitude = "43.34458",
                            Longitude = "17.81346"
                        },
                        new
                        {
                            Id = 13,
                            CityId = 1,
                            CreatedByUserId = new Guid("29f648d1-4b82-4bf9-be7c-dc690b6edbf9"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2075),
                            IsDeleted = false,
                            Latitude = "43.34731",
                            Longitude = "17.81352"
                        },
                        new
                        {
                            Id = 14,
                            CityId = 1,
                            CreatedByUserId = new Guid("29f648d1-4b82-4bf9-be7c-dc690b6edbf9"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2077),
                            IsDeleted = false,
                            Latitude = "43.34745",
                            Longitude = "17.81166"
                        },
                        new
                        {
                            Id = 15,
                            CityId = 1,
                            CreatedByUserId = new Guid("29f648d1-4b82-4bf9-be7c-dc690b6edbf9"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2080),
                            IsDeleted = false,
                            Latitude = "43.34666",
                            Longitude = "17.80534"
                        },
                        new
                        {
                            Id = 16,
                            CityId = 1,
                            CreatedByUserId = new Guid("29f648d1-4b82-4bf9-be7c-dc690b6edbf9"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2082),
                            IsDeleted = false,
                            Latitude = "43.34988",
                            Longitude = "17.80171"
                        },
                        new
                        {
                            Id = 17,
                            CityId = 1,
                            CreatedByUserId = new Guid("29f648d1-4b82-4bf9-be7c-dc690b6edbf9"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2084),
                            IsDeleted = false,
                            Latitude = "43.33786",
                            Longitude = "17.81581"
                        },
                        new
                        {
                            Id = 18,
                            CityId = 1,
                            CreatedByUserId = new Guid("29f648d1-4b82-4bf9-be7c-dc690b6edbf9"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2087),
                            IsDeleted = false,
                            Latitude = "43.34458",
                            Longitude = "17.81346"
                        },
                        new
                        {
                            Id = 19,
                            CityId = 1,
                            CreatedByUserId = new Guid("531cbf7f-0aa1-44b2-8186-83867ac6e257"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2089),
                            IsDeleted = false,
                            Latitude = "43.34731",
                            Longitude = "17.81352"
                        },
                        new
                        {
                            Id = 20,
                            CityId = 1,
                            CreatedByUserId = new Guid("531cbf7f-0aa1-44b2-8186-83867ac6e257"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2092),
                            IsDeleted = false,
                            Latitude = "43.34745",
                            Longitude = "17.81166"
                        },
                        new
                        {
                            Id = 21,
                            CityId = 1,
                            CreatedByUserId = new Guid("531cbf7f-0aa1-44b2-8186-83867ac6e257"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2094),
                            IsDeleted = false,
                            Latitude = "43.34666",
                            Longitude = "17.80534"
                        },
                        new
                        {
                            Id = 22,
                            CityId = 1,
                            CreatedByUserId = new Guid("531cbf7f-0aa1-44b2-8186-83867ac6e257"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2096),
                            IsDeleted = false,
                            Latitude = "43.34988",
                            Longitude = "17.80171"
                        },
                        new
                        {
                            Id = 23,
                            CityId = 1,
                            CreatedByUserId = new Guid("531cbf7f-0aa1-44b2-8186-83867ac6e257"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2098),
                            IsDeleted = false,
                            Latitude = "43.33786",
                            Longitude = "17.81581"
                        },
                        new
                        {
                            Id = 24,
                            CityId = 1,
                            CreatedByUserId = new Guid("531cbf7f-0aa1-44b2-8186-83867ac6e257"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2100),
                            IsDeleted = false,
                            Latitude = "43.34458",
                            Longitude = "17.81346"
                        });
                });

            modelBuilder.Entity("e_Delivery.Entities.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("RestaurantName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SentByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SentToUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SentByUserId");

                    b.HasIndex("SentToUserId");

                    b.ToTable("Notifications");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "Your order has been delivered.",
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(3154),
                            IsDeleted = false,
                            RestaurantName = "Aldi - Caffe slastičarna",
                            SentByUserId = new Guid("b8396f1d-a29a-4856-a4c1-1312dc97a4a1"),
                            SentToUserId = new Guid("bb5f8b53-1b9c-404f-86c4-6c6036102045")
                        },
                        new
                        {
                            Id = 2,
                            Content = "Your order has been delivered.",
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(3159),
                            IsDeleted = false,
                            RestaurantName = "Aldi - Caffe slastičarna",
                            SentByUserId = new Guid("b8cd72fb-eac5-40d5-8b22-7e8d601e2760"),
                            SentToUserId = new Guid("bb5f8b53-1b9c-404f-86c4-6c6036102045")
                        },
                        new
                        {
                            Id = 3,
                            Content = "Your order has been delivered.",
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(3162),
                            IsDeleted = false,
                            RestaurantName = "Aldi - Caffe slastičarna",
                            SentByUserId = new Guid("1bb03af4-c9c6-42f4-8153-dfd0e427bb43"),
                            SentToUserId = new Guid("bb5f8b53-1b9c-404f-86c4-6c6036102045")
                        },
                        new
                        {
                            Id = 4,
                            Content = "You have been assigned to an order.",
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(3164),
                            IsDeleted = false,
                            RestaurantName = "Aldi - Caffe slastičarna",
                            SentByUserId = new Guid("fd8eeeae-94c0-4f7c-ae8d-04274d13031b"),
                            SentToUserId = new Guid("b8396f1d-a29a-4856-a4c1-1312dc97a4a1")
                        });
                });

            modelBuilder.Entity("e_Delivery.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Allergies")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeliveryPersonAssignedId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<int>("OrderState")
                        .HasColumnType("int");

                    b.Property<int>("PaymentMethod")
                        .HasColumnType("int");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.Property<double>("TotalCost")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("DeliveryPersonAssignedId");

                    b.HasIndex("LocationId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = new Guid("faf51d20-4224-4894-940e-1d916274b611"),
                            Address = "123 Main St",
                            Allergies = "None",
                            CreatedByUserId = new Guid("bb5f8b53-1b9c-404f-86c4-6c6036102045"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2848),
                            IsDeleted = false,
                            IsPaid = true,
                            LocationId = 7,
                            OrderState = 1,
                            PaymentMethod = 1,
                            RestaurantId = 1,
                            TotalCost = 50.0
                        },
                        new
                        {
                            Id = new Guid("098f1a2e-656c-4b65-9429-be1a4f1022e7"),
                            Address = "123 Main St",
                            Allergies = "Some nuts",
                            CreatedByUserId = new Guid("bb5f8b53-1b9c-404f-86c4-6c6036102045"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2857),
                            DeliveryPersonAssignedId = new Guid("b8396f1d-a29a-4856-a4c1-1312dc97a4a1"),
                            IsDeleted = false,
                            IsPaid = true,
                            LocationId = 8,
                            OrderState = 2,
                            PaymentMethod = 2,
                            RestaurantId = 1,
                            TotalCost = 40.0
                        },
                        new
                        {
                            Id = new Guid("15073c29-56ff-4762-8a86-a4211339e0f9"),
                            Address = "123 Main St",
                            Allergies = "None",
                            CreatedByUserId = new Guid("bb5f8b53-1b9c-404f-86c4-6c6036102045"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2861),
                            IsDeleted = false,
                            IsPaid = true,
                            LocationId = 9,
                            OrderState = 1,
                            PaymentMethod = 1,
                            RestaurantId = 1,
                            TotalCost = 30.0
                        },
                        new
                        {
                            Id = new Guid("0c54c236-4ec5-40e4-b354-2d50e9000778"),
                            Address = "123 Main St",
                            Allergies = "Some nuts",
                            CreatedByUserId = new Guid("bb5f8b53-1b9c-404f-86c4-6c6036102045"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2863),
                            DeliveryPersonAssignedId = new Guid("b8cd72fb-eac5-40d5-8b22-7e8d601e2760"),
                            IsDeleted = false,
                            IsPaid = true,
                            LocationId = 10,
                            OrderState = 2,
                            PaymentMethod = 2,
                            RestaurantId = 1,
                            TotalCost = 35.0
                        },
                        new
                        {
                            Id = new Guid("8ce9b7ba-ccff-422c-acc9-ed0a704dacaf"),
                            Address = "123 Main St",
                            Allergies = "Maybe a little cream is bad",
                            CreatedByUserId = new Guid("bb5f8b53-1b9c-404f-86c4-6c6036102045"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2866),
                            IsDeleted = false,
                            IsPaid = true,
                            LocationId = 11,
                            OrderState = 1,
                            PaymentMethod = 1,
                            RestaurantId = 1,
                            TotalCost = 26.0
                        },
                        new
                        {
                            Id = new Guid("e87e91f7-0b36-4c08-83bc-774aacb99ab8"),
                            Address = "123 Main St",
                            Allergies = "Some berries",
                            CreatedByUserId = new Guid("bb5f8b53-1b9c-404f-86c4-6c6036102045"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2870),
                            DeliveryPersonAssignedId = new Guid("1bb03af4-c9c6-42f4-8153-dfd0e427bb43"),
                            IsDeleted = false,
                            IsPaid = true,
                            LocationId = 12,
                            OrderState = 2,
                            PaymentMethod = 2,
                            RestaurantId = 1,
                            TotalCost = 27.0
                        },
                        new
                        {
                            Id = new Guid("328ba3f4-7f21-40f2-ada2-f4f55eaef398"),
                            Address = "6th street",
                            Allergies = "None",
                            CreatedByUserId = new Guid("29f648d1-4b82-4bf9-be7c-dc690b6edbf9"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2873),
                            IsDeleted = false,
                            IsPaid = true,
                            LocationId = 13,
                            OrderState = 1,
                            PaymentMethod = 1,
                            RestaurantId = 1,
                            TotalCost = 50.0
                        },
                        new
                        {
                            Id = new Guid("551bf252-ccac-49a9-ade0-5b82db0025f6"),
                            Address = "6th street",
                            Allergies = "None",
                            CreatedByUserId = new Guid("29f648d1-4b82-4bf9-be7c-dc690b6edbf9"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2876),
                            IsDeleted = false,
                            IsPaid = true,
                            LocationId = 14,
                            OrderState = 1,
                            PaymentMethod = 1,
                            RestaurantId = 2,
                            TotalCost = 36.0
                        },
                        new
                        {
                            Id = new Guid("4cc493e7-886e-425b-83d7-0c433bf07a9c"),
                            Address = "6th street",
                            Allergies = "None",
                            CreatedByUserId = new Guid("29f648d1-4b82-4bf9-be7c-dc690b6edbf9"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2879),
                            IsDeleted = false,
                            IsPaid = true,
                            LocationId = 15,
                            OrderState = 1,
                            PaymentMethod = 1,
                            RestaurantId = 3,
                            TotalCost = 12.0
                        },
                        new
                        {
                            Id = new Guid("81dcd144-67d4-4117-ab76-b511689c9cc2"),
                            Address = "6th street",
                            Allergies = "None",
                            CreatedByUserId = new Guid("29f648d1-4b82-4bf9-be7c-dc690b6edbf9"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2882),
                            IsDeleted = false,
                            IsPaid = true,
                            LocationId = 16,
                            OrderState = 1,
                            PaymentMethod = 1,
                            RestaurantId = 4,
                            TotalCost = 21.0
                        },
                        new
                        {
                            Id = new Guid("1991b3fc-5625-49fe-ab51-9ab5495340a9"),
                            Address = "6th street",
                            Allergies = "None",
                            CreatedByUserId = new Guid("29f648d1-4b82-4bf9-be7c-dc690b6edbf9"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2885),
                            IsDeleted = false,
                            IsPaid = true,
                            LocationId = 17,
                            OrderState = 1,
                            PaymentMethod = 1,
                            RestaurantId = 5,
                            TotalCost = 48.0
                        },
                        new
                        {
                            Id = new Guid("51fe2fb5-761e-40eb-9518-3be0e95a9af6"),
                            Address = "6th street",
                            Allergies = "None",
                            CreatedByUserId = new Guid("29f648d1-4b82-4bf9-be7c-dc690b6edbf9"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2920),
                            IsDeleted = false,
                            IsPaid = true,
                            LocationId = 18,
                            OrderState = 1,
                            PaymentMethod = 1,
                            RestaurantId = 6,
                            TotalCost = 34.0
                        },
                        new
                        {
                            Id = new Guid("ff454850-5665-4246-aa6f-738cb80aa325"),
                            Address = "6th street",
                            Allergies = "None",
                            CreatedByUserId = new Guid("531cbf7f-0aa1-44b2-8186-83867ac6e257"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2924),
                            IsDeleted = false,
                            IsPaid = true,
                            LocationId = 19,
                            OrderState = 1,
                            PaymentMethod = 1,
                            RestaurantId = 1,
                            TotalCost = 50.0
                        },
                        new
                        {
                            Id = new Guid("5fd9e288-163c-4286-bb40-02213f53198f"),
                            Address = "6th street",
                            Allergies = "None",
                            CreatedByUserId = new Guid("531cbf7f-0aa1-44b2-8186-83867ac6e257"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2926),
                            IsDeleted = false,
                            IsPaid = true,
                            LocationId = 20,
                            OrderState = 1,
                            PaymentMethod = 1,
                            RestaurantId = 2,
                            TotalCost = 36.0
                        },
                        new
                        {
                            Id = new Guid("650327a7-1218-4306-aca5-cb30ef57de36"),
                            Address = "6th street",
                            Allergies = "None",
                            CreatedByUserId = new Guid("531cbf7f-0aa1-44b2-8186-83867ac6e257"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2929),
                            IsDeleted = false,
                            IsPaid = true,
                            LocationId = 21,
                            OrderState = 1,
                            PaymentMethod = 1,
                            RestaurantId = 3,
                            TotalCost = 12.0
                        },
                        new
                        {
                            Id = new Guid("0167003f-76d8-4736-9010-9f4f756c5107"),
                            Address = "6th street",
                            Allergies = "None",
                            CreatedByUserId = new Guid("531cbf7f-0aa1-44b2-8186-83867ac6e257"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2931),
                            IsDeleted = false,
                            IsPaid = true,
                            LocationId = 22,
                            OrderState = 1,
                            PaymentMethod = 1,
                            RestaurantId = 4,
                            TotalCost = 21.0
                        },
                        new
                        {
                            Id = new Guid("425aaa01-bd25-4cae-a267-433e6fef7818"),
                            Address = "6th street",
                            Allergies = "None",
                            CreatedByUserId = new Guid("531cbf7f-0aa1-44b2-8186-83867ac6e257"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2934),
                            IsDeleted = false,
                            IsPaid = true,
                            LocationId = 23,
                            OrderState = 1,
                            PaymentMethod = 1,
                            RestaurantId = 5,
                            TotalCost = 48.0
                        },
                        new
                        {
                            Id = new Guid("365fd8d6-8de9-4693-bd61-84eb1526c9d9"),
                            Address = "6th street",
                            Allergies = "None",
                            CreatedByUserId = new Guid("531cbf7f-0aa1-44b2-8186-83867ac6e257"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2937),
                            IsDeleted = false,
                            IsPaid = true,
                            LocationId = 24,
                            OrderState = 1,
                            PaymentMethod = 1,
                            RestaurantId = 6,
                            TotalCost = 34.0
                        });
                });

            modelBuilder.Entity("e_Delivery.Entities.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Cost")
                        .HasColumnType("float");

                    b.Property<int>("FoodItemId")
                        .HasColumnType("int");

                    b.Property<Guid?>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("SideDishIds")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FoodItemId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cost = 20.0,
                            FoodItemId = 1,
                            OrderId = new Guid("faf51d20-4224-4894-940e-1d916274b611"),
                            Quantity = 2,
                            SideDishIds = ""
                        },
                        new
                        {
                            Id = 2,
                            Cost = 20.0,
                            FoodItemId = 3,
                            OrderId = new Guid("faf51d20-4224-4894-940e-1d916274b611"),
                            Quantity = 2,
                            SideDishIds = ""
                        },
                        new
                        {
                            Id = 3,
                            Cost = 10.0,
                            FoodItemId = 4,
                            OrderId = new Guid("098f1a2e-656c-4b65-9429-be1a4f1022e7"),
                            Quantity = 1,
                            SideDishIds = ""
                        },
                        new
                        {
                            Id = 4,
                            Cost = 10.0,
                            FoodItemId = 4,
                            OrderId = new Guid("15073c29-56ff-4762-8a86-a4211339e0f9"),
                            Quantity = 1,
                            SideDishIds = ""
                        },
                        new
                        {
                            Id = 5,
                            Cost = 10.0,
                            FoodItemId = 4,
                            OrderId = new Guid("15073c29-56ff-4762-8a86-a4211339e0f9"),
                            Quantity = 2,
                            SideDishIds = ""
                        },
                        new
                        {
                            Id = 6,
                            Cost = 10.0,
                            FoodItemId = 6,
                            OrderId = new Guid("0c54c236-4ec5-40e4-b354-2d50e9000778"),
                            Quantity = 1,
                            SideDishIds = ""
                        },
                        new
                        {
                            Id = 7,
                            Cost = 10.0,
                            FoodItemId = 7,
                            OrderId = new Guid("8ce9b7ba-ccff-422c-acc9-ed0a704dacaf"),
                            Quantity = 1,
                            SideDishIds = ""
                        },
                        new
                        {
                            Id = 8,
                            Cost = 10.0,
                            FoodItemId = 8,
                            OrderId = new Guid("8ce9b7ba-ccff-422c-acc9-ed0a704dacaf"),
                            Quantity = 1,
                            SideDishIds = ""
                        },
                        new
                        {
                            Id = 9,
                            Cost = 10.0,
                            FoodItemId = 9,
                            OrderId = new Guid("e87e91f7-0b36-4c08-83bc-774aacb99ab8"),
                            Quantity = 1,
                            SideDishIds = ""
                        },
                        new
                        {
                            Id = 10,
                            Cost = 10.0,
                            FoodItemId = 10,
                            OrderId = new Guid("328ba3f4-7f21-40f2-ada2-f4f55eaef398"),
                            Quantity = 1,
                            SideDishIds = ""
                        },
                        new
                        {
                            Id = 11,
                            Cost = 10.0,
                            FoodItemId = 11,
                            OrderId = new Guid("ff454850-5665-4246-aa6f-738cb80aa325"),
                            Quantity = 2,
                            SideDishIds = ""
                        },
                        new
                        {
                            Id = 12,
                            Cost = 30.0,
                            FoodItemId = 15,
                            OrderId = new Guid("551bf252-ccac-49a9-ade0-5b82db0025f6"),
                            Quantity = 2,
                            SideDishIds = ""
                        },
                        new
                        {
                            Id = 13,
                            Cost = 30.0,
                            FoodItemId = 16,
                            OrderId = new Guid("5fd9e288-163c-4286-bb40-02213f53198f"),
                            Quantity = 2,
                            SideDishIds = ""
                        },
                        new
                        {
                            Id = 14,
                            Cost = 15.0,
                            FoodItemId = 29,
                            OrderId = new Guid("4cc493e7-886e-425b-83d7-0c433bf07a9c"),
                            Quantity = 2,
                            SideDishIds = ""
                        },
                        new
                        {
                            Id = 15,
                            Cost = 15.0,
                            FoodItemId = 31,
                            OrderId = new Guid("650327a7-1218-4306-aca5-cb30ef57de36"),
                            Quantity = 2,
                            SideDishIds = ""
                        },
                        new
                        {
                            Id = 16,
                            Cost = 15.0,
                            FoodItemId = 44,
                            OrderId = new Guid("81dcd144-67d4-4117-ab76-b511689c9cc2"),
                            Quantity = 2,
                            SideDishIds = ""
                        },
                        new
                        {
                            Id = 17,
                            Cost = 15.0,
                            FoodItemId = 45,
                            OrderId = new Guid("0167003f-76d8-4736-9010-9f4f756c5107"),
                            Quantity = 2,
                            SideDishIds = ""
                        },
                        new
                        {
                            Id = 18,
                            Cost = 8.0,
                            FoodItemId = 57,
                            OrderId = new Guid("1991b3fc-5625-49fe-ab51-9ab5495340a9"),
                            Quantity = 1,
                            SideDishIds = ""
                        },
                        new
                        {
                            Id = 19,
                            Cost = 10.0,
                            FoodItemId = 58,
                            OrderId = new Guid("425aaa01-bd25-4cae-a267-433e6fef7818"),
                            Quantity = 2,
                            SideDishIds = ""
                        },
                        new
                        {
                            Id = 20,
                            Cost = 4.0,
                            FoodItemId = 67,
                            OrderId = new Guid("51fe2fb5-761e-40eb-9518-3be0e95a9af6"),
                            Quantity = 1,
                            SideDishIds = ""
                        },
                        new
                        {
                            Id = 21,
                            Cost = 14.0,
                            FoodItemId = 68,
                            OrderId = new Guid("365fd8d6-8de9-4693-bd61-84eb1526c9d9"),
                            Quantity = 2,
                            SideDishIds = ""
                        });
                });

            modelBuilder.Entity("e_Delivery.Entities.OrderItemSideDish", b =>
                {
                    b.Property<int>("OrderItemId")
                        .HasColumnType("int");

                    b.Property<int>("SideDishId")
                        .HasColumnType("int");

                    b.HasKey("OrderItemId", "SideDishId");

                    b.HasIndex("SideDishId");

                    b.ToTable("OrderItemSideDish");

                    b.HasData(
                        new
                        {
                            OrderItemId = 1,
                            SideDishId = 1
                        },
                        new
                        {
                            OrderItemId = 2,
                            SideDishId = 2
                        },
                        new
                        {
                            OrderItemId = 3,
                            SideDishId = 1
                        },
                        new
                        {
                            OrderItemId = 4,
                            SideDishId = 1
                        },
                        new
                        {
                            OrderItemId = 5,
                            SideDishId = 2
                        },
                        new
                        {
                            OrderItemId = 6,
                            SideDishId = 4
                        },
                        new
                        {
                            OrderItemId = 7,
                            SideDishId = 4
                        },
                        new
                        {
                            OrderItemId = 8,
                            SideDishId = 2
                        },
                        new
                        {
                            OrderItemId = 9,
                            SideDishId = 1
                        },
                        new
                        {
                            OrderItemId = 10,
                            SideDishId = 1
                        });
                });

            modelBuilder.Entity("e_Delivery.Entities.Restaurant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("ClosingTime")
                        .HasColumnType("time");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("DeliveryCharge")
                        .HasColumnType("float");

                    b.Property<int>("DeliveryTime")
                        .HasColumnType("int");

                    b.Property<bool>("IsOpen")
                        .HasColumnType("bit");

                    b.Property<int?>("LocationId")
                        .HasColumnType("int");

                    b.Property<int?>("LogoId")
                        .HasColumnType("int");

                    b.Property<Guid>("ModifiedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("OpeningTime")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("LocationId");

                    b.HasIndex("LogoId");

                    b.HasIndex("ModifiedByUserId");

                    b.ToTable("Restaurants");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Zagrebačka 6",
                            ClosingTime = new TimeSpan(0, 20, 0, 0, 0),
                            ContactNumber = "063-123-123",
                            CreatedByUserId = new Guid("fd8eeeae-94c0-4f7c-ae8d-04274d13031b"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2202),
                            DeliveryCharge = 2.5,
                            DeliveryTime = 40,
                            IsOpen = true,
                            LocationId = 1,
                            LogoId = 1,
                            ModifiedByUserId = new Guid("fd8eeeae-94c0-4f7c-ae8d-04274d13031b"),
                            Name = "Aldi - Caffe slastičarna",
                            OpeningTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 2,
                            Address = "Brkića 1a",
                            ClosingTime = new TimeSpan(0, 22, 0, 0, 0),
                            ContactNumber = "063-123-124",
                            CreatedByUserId = new Guid("bcc3036b-fcde-4aae-8d5a-7d3b85a91310"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2211),
                            DeliveryCharge = 2.0,
                            DeliveryTime = 30,
                            IsOpen = true,
                            LocationId = 2,
                            LogoId = 2,
                            ModifiedByUserId = new Guid("bcc3036b-fcde-4aae-8d5a-7d3b85a91310"),
                            Name = "Porto Pizza Mostar",
                            OpeningTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 3,
                            Address = "Kraljice Katarine 11a",
                            ClosingTime = new TimeSpan(0, 21, 0, 0, 0),
                            ContactNumber = "063-123-125",
                            CreatedByUserId = new Guid("a6262414-844d-4003-9184-1a39fcc8d621"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2216),
                            DeliveryCharge = 3.0,
                            DeliveryTime = 45,
                            IsOpen = true,
                            LocationId = 3,
                            LogoId = 3,
                            ModifiedByUserId = new Guid("a6262414-844d-4003-9184-1a39fcc8d621"),
                            Name = "Restoran Radobolja",
                            OpeningTime = new TimeSpan(0, 10, 0, 0, 0)
                        },
                        new
                        {
                            Id = 4,
                            Address = "Bišće Polje, M17",
                            ClosingTime = new TimeSpan(0, 21, 0, 0, 0),
                            ContactNumber = "063-123-126",
                            CreatedByUserId = new Guid("6c932e9e-d350-4103-bd77-c2716d6f4a1f"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2221),
                            DeliveryCharge = 3.0,
                            DeliveryTime = 50,
                            IsOpen = true,
                            LocationId = 4,
                            LogoId = 4,
                            ModifiedByUserId = new Guid("6c932e9e-d350-4103-bd77-c2716d6f4a1f"),
                            Name = "Dva fenjera",
                            OpeningTime = new TimeSpan(0, 10, 0, 0, 0)
                        },
                        new
                        {
                            Id = 5,
                            Address = "Husnije Repca 3",
                            ClosingTime = new TimeSpan(0, 21, 0, 0, 0),
                            ContactNumber = "063-123-127",
                            CreatedByUserId = new Guid("6f43201b-919e-471f-9ca7-4f4d0c74ca39"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2224),
                            DeliveryCharge = 1.5,
                            DeliveryTime = 30,
                            IsOpen = true,
                            LocationId = 5,
                            LogoId = 5,
                            ModifiedByUserId = new Guid("6f43201b-919e-471f-9ca7-4f4d0c74ca39"),
                            Name = "Niđe veze",
                            OpeningTime = new TimeSpan(0, 10, 0, 0, 0)
                        },
                        new
                        {
                            Id = 6,
                            Address = "Kralja Tomislava 9",
                            ClosingTime = new TimeSpan(0, 21, 0, 0, 0),
                            ContactNumber = "063-123-128",
                            CreatedByUserId = new Guid("e7286ada-7ad6-4bb4-8b0a-436141928671"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(2229),
                            DeliveryCharge = 2.5,
                            DeliveryTime = 35,
                            IsOpen = true,
                            LocationId = 6,
                            LogoId = 6,
                            ModifiedByUserId = new Guid("e7286ada-7ad6-4bb4-8b0a-436141928671"),
                            Name = "Megi Le Petit",
                            OpeningTime = new TimeSpan(0, 10, 0, 0, 0)
                        });
                });

            modelBuilder.Entity("e_Delivery.Entities.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid?>("CreatedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Grade")
                        .HasColumnType("float");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("ModifiedByUserId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedByUserId = new Guid("bb5f8b53-1b9c-404f-86c4-6c6036102045"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(3059),
                            Description = "Great food!",
                            Grade = 5.0,
                            IsDeleted = false,
                            ModifiedByUserId = new Guid("bb5f8b53-1b9c-404f-86c4-6c6036102045"),
                            RestaurantId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedByUserId = new Guid("29f648d1-4b82-4bf9-be7c-dc690b6edbf9"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(3069),
                            Description = "Very good food!",
                            Grade = 4.5,
                            IsDeleted = false,
                            ModifiedByUserId = new Guid("29f648d1-4b82-4bf9-be7c-dc690b6edbf9"),
                            RestaurantId = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedByUserId = new Guid("531cbf7f-0aa1-44b2-8186-83867ac6e257"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(3072),
                            Description = "Solid food!",
                            Grade = 4.0,
                            IsDeleted = false,
                            ModifiedByUserId = new Guid("531cbf7f-0aa1-44b2-8186-83867ac6e257"),
                            RestaurantId = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedByUserId = new Guid("29f648d1-4b82-4bf9-be7c-dc690b6edbf9"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(3075),
                            Description = "Very good food!",
                            Grade = 4.5,
                            IsDeleted = false,
                            ModifiedByUserId = new Guid("29f648d1-4b82-4bf9-be7c-dc690b6edbf9"),
                            RestaurantId = 2
                        },
                        new
                        {
                            Id = 5,
                            CreatedByUserId = new Guid("531cbf7f-0aa1-44b2-8186-83867ac6e257"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(3078),
                            Description = "Solid food!",
                            Grade = 4.0,
                            IsDeleted = false,
                            ModifiedByUserId = new Guid("531cbf7f-0aa1-44b2-8186-83867ac6e257"),
                            RestaurantId = 2
                        },
                        new
                        {
                            Id = 6,
                            CreatedByUserId = new Guid("29f648d1-4b82-4bf9-be7c-dc690b6edbf9"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(3081),
                            Description = "Very good food!",
                            Grade = 5.0,
                            IsDeleted = false,
                            ModifiedByUserId = new Guid("29f648d1-4b82-4bf9-be7c-dc690b6edbf9"),
                            RestaurantId = 3
                        },
                        new
                        {
                            Id = 7,
                            CreatedByUserId = new Guid("531cbf7f-0aa1-44b2-8186-83867ac6e257"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(3084),
                            Description = "Solid food!",
                            Grade = 4.5,
                            IsDeleted = false,
                            ModifiedByUserId = new Guid("531cbf7f-0aa1-44b2-8186-83867ac6e257"),
                            RestaurantId = 3
                        },
                        new
                        {
                            Id = 8,
                            CreatedByUserId = new Guid("29f648d1-4b82-4bf9-be7c-dc690b6edbf9"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(3087),
                            Description = "Very good food!",
                            Grade = 3.5,
                            IsDeleted = false,
                            ModifiedByUserId = new Guid("29f648d1-4b82-4bf9-be7c-dc690b6edbf9"),
                            RestaurantId = 4
                        },
                        new
                        {
                            Id = 9,
                            CreatedByUserId = new Guid("531cbf7f-0aa1-44b2-8186-83867ac6e257"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(3089),
                            Description = "Solid food!",
                            Grade = 4.0,
                            IsDeleted = false,
                            ModifiedByUserId = new Guid("531cbf7f-0aa1-44b2-8186-83867ac6e257"),
                            RestaurantId = 4
                        },
                        new
                        {
                            Id = 10,
                            CreatedByUserId = new Guid("29f648d1-4b82-4bf9-be7c-dc690b6edbf9"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(3093),
                            Description = "Very good food!",
                            Grade = 4.5,
                            IsDeleted = false,
                            ModifiedByUserId = new Guid("29f648d1-4b82-4bf9-be7c-dc690b6edbf9"),
                            RestaurantId = 5
                        },
                        new
                        {
                            Id = 11,
                            CreatedByUserId = new Guid("531cbf7f-0aa1-44b2-8186-83867ac6e257"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(3096),
                            Description = "Solid food!",
                            Grade = 2.0,
                            IsDeleted = false,
                            ModifiedByUserId = new Guid("531cbf7f-0aa1-44b2-8186-83867ac6e257"),
                            RestaurantId = 5
                        },
                        new
                        {
                            Id = 12,
                            CreatedByUserId = new Guid("29f648d1-4b82-4bf9-be7c-dc690b6edbf9"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(3099),
                            Description = "Very good food!",
                            Grade = 2.5,
                            IsDeleted = false,
                            ModifiedByUserId = new Guid("29f648d1-4b82-4bf9-be7c-dc690b6edbf9"),
                            RestaurantId = 6
                        },
                        new
                        {
                            Id = 13,
                            CreatedByUserId = new Guid("531cbf7f-0aa1-44b2-8186-83867ac6e257"),
                            CreatedDate = new DateTime(2024, 6, 11, 16, 17, 50, 956, DateTimeKind.Local).AddTicks(3101),
                            Description = "Solid food!",
                            Grade = 3.0,
                            IsDeleted = false,
                            ModifiedByUserId = new Guid("531cbf7f-0aa1-44b2-8186-83867ac6e257"),
                            RestaurantId = 6
                        });
                });

            modelBuilder.Entity("e_Delivery.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("asp_net_roles", "identity");

                    b.HasData(
                        new
                        {
                            Id = new Guid("353224f4-7950-428d-a141-08dc2a5ba67c"),
                            ConcurrencyStamp = "f0df392e-b4b4-4357-9d34-299170dd0af8",
                            IsDeleted = false,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = new Guid("f57f872c-eaa4-441e-a142-08dc2a5ba67c"),
                            ConcurrencyStamp = "a0ec5c5c-ae88-47fe-b42f-2461f873377d",
                            IsDeleted = false,
                            Name = "Desktop"
                        },
                        new
                        {
                            Id = new Guid("67c0d30a-d873-4f9b-a143-08dc2a5ba67c"),
                            ConcurrencyStamp = "65f10588-f588-4d9a-9350-3496426dfdc1",
                            IsDeleted = false,
                            Name = "MobileCustomer"
                        },
                        new
                        {
                            Id = new Guid("7d7168d4-ef7e-4503-a144-08dc2a5ba67c"),
                            ConcurrencyStamp = "e9be671c-72dc-4fe9-a0f4-bda20301b68b",
                            IsDeleted = false,
                            Name = "MobileDeliveryPerson"
                        });
                });

            modelBuilder.Entity("e_Delivery.Entities.SideDish", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RestaurantId");

                    b.ToTable("SideDishes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsAvailable = true,
                            Name = "Mayonnaise",
                            Price = 1.0,
                            RestaurantId = 1
                        },
                        new
                        {
                            Id = 2,
                            IsAvailable = true,
                            Name = "Ketchup",
                            Price = 1.0,
                            RestaurantId = 1
                        },
                        new
                        {
                            Id = 3,
                            IsAvailable = true,
                            Name = "Tartar sauce",
                            Price = 1.0,
                            RestaurantId = 1
                        },
                        new
                        {
                            Id = 4,
                            IsAvailable = true,
                            Name = "French fries",
                            Price = 2.5,
                            RestaurantId = 1
                        },
                        new
                        {
                            Id = 5,
                            IsAvailable = true,
                            Name = "Extra cheese",
                            Price = 1.5,
                            RestaurantId = 1
                        },
                        new
                        {
                            Id = 6,
                            IsAvailable = true,
                            Name = "Ice cream",
                            Price = 2.0,
                            RestaurantId = 1
                        },
                        new
                        {
                            Id = 7,
                            IsAvailable = true,
                            Name = "Mayonnaise",
                            Price = 1.0,
                            RestaurantId = 2
                        },
                        new
                        {
                            Id = 8,
                            IsAvailable = true,
                            Name = "Ketchup",
                            Price = 1.0,
                            RestaurantId = 2
                        },
                        new
                        {
                            Id = 9,
                            IsAvailable = true,
                            Name = "Tartar sauce",
                            Price = 1.0,
                            RestaurantId = 2
                        },
                        new
                        {
                            Id = 10,
                            IsAvailable = true,
                            Name = "Cream",
                            Price = 0.5,
                            RestaurantId = 2
                        },
                        new
                        {
                            Id = 11,
                            IsAvailable = true,
                            Name = "French fries",
                            Price = 2.5,
                            RestaurantId = 3
                        },
                        new
                        {
                            Id = 12,
                            IsAvailable = true,
                            Name = "Mayonnaise",
                            Price = 1.5,
                            RestaurantId = 3
                        },
                        new
                        {
                            Id = 13,
                            IsAvailable = true,
                            Name = "Ketchup",
                            Price = 1.5,
                            RestaurantId = 3
                        },
                        new
                        {
                            Id = 14,
                            IsAvailable = true,
                            Name = "Ajvar",
                            Price = 1.5,
                            RestaurantId = 3
                        },
                        new
                        {
                            Id = 15,
                            IsAvailable = true,
                            Name = "Barbecue sauce",
                            Price = 2.5,
                            RestaurantId = 3
                        },
                        new
                        {
                            Id = 16,
                            IsAvailable = true,
                            Name = "Soy sauce",
                            Price = 2.0,
                            RestaurantId = 3
                        },
                        new
                        {
                            Id = 17,
                            IsAvailable = true,
                            Name = "Vinegar",
                            Price = 2.0,
                            RestaurantId = 3
                        },
                        new
                        {
                            Id = 18,
                            IsAvailable = true,
                            Name = "Hot sauce",
                            Price = 2.0,
                            RestaurantId = 3
                        },
                        new
                        {
                            Id = 19,
                            IsAvailable = true,
                            Name = "Prosciutto",
                            Price = 2.5,
                            RestaurantId = 4
                        },
                        new
                        {
                            Id = 20,
                            IsAvailable = true,
                            Name = "Kajmak",
                            Price = 1.5,
                            RestaurantId = 4
                        },
                        new
                        {
                            Id = 21,
                            IsAvailable = true,
                            Name = "Sour cream",
                            Price = 1.5,
                            RestaurantId = 4
                        },
                        new
                        {
                            Id = 22,
                            IsAvailable = true,
                            Name = "Mayonaisse",
                            Price = 1.5,
                            RestaurantId = 5
                        },
                        new
                        {
                            Id = 23,
                            IsAvailable = true,
                            Name = "Ketchup",
                            Price = 1.5,
                            RestaurantId = 5
                        },
                        new
                        {
                            Id = 24,
                            IsAvailable = true,
                            Name = "Tartar sauce",
                            Price = 1.5,
                            RestaurantId = 5
                        },
                        new
                        {
                            Id = 25,
                            IsAvailable = true,
                            Name = "Ice cream",
                            Price = 1.5,
                            RestaurantId = 5
                        },
                        new
                        {
                            Id = 26,
                            IsAvailable = true,
                            Name = "Whipped cream",
                            Price = 0.5,
                            RestaurantId = 5
                        },
                        new
                        {
                            Id = 27,
                            IsAvailable = true,
                            Name = "Vinegar",
                            Price = 1.5,
                            RestaurantId = 5
                        },
                        new
                        {
                            Id = 28,
                            IsAvailable = true,
                            Name = "Vinegar",
                            Price = 1.5,
                            RestaurantId = 6
                        },
                        new
                        {
                            Id = 29,
                            IsAvailable = true,
                            Name = "Mayonnaise",
                            Price = 1.5,
                            RestaurantId = 6
                        },
                        new
                        {
                            Id = 30,
                            IsAvailable = true,
                            Name = "Ketchup",
                            Price = 1.5,
                            RestaurantId = 6
                        },
                        new
                        {
                            Id = 31,
                            IsAvailable = true,
                            Name = "Extra cheese",
                            Price = 1.5,
                            RestaurantId = 6
                        });
                });

            modelBuilder.Entity("e_Delivery.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<bool?>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RefreshTokenExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RestaurantId")
                        .HasColumnType("int");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<TimeSpan?>("WorkFrom")
                        .HasColumnType("time");

                    b.Property<TimeSpan?>("WorkUntil")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("RestaurantId");

                    b.ToTable("asp_net_users", "identity");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4325ff27-c4d1-4ee8-8073-518fafba8678"),
                            AccessFailedCount = 0,
                            CityId = 1,
                            ConcurrencyStamp = "c32a2709-21d0-4058-97d7-1f6745f6181c",
                            CreatedDate = new DateTime(2024, 2, 7, 17, 26, 40, 899, DateTimeKind.Unspecified).AddTicks(9869),
                            Email = "edeliveryadmin@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Admin",
                            Gender = 1,
                            IsAvailable = true,
                            IsDeleted = false,
                            LastName = "Admin",
                            LockoutEnabled = false,
                            NormalizedEmail = "EMPLOYEE@EMPLOYEE.COM",
                            NormalizedUserName = "ADMIN",
                            PasswordHash = "AQAAAAIAAYagAAAAEGQ74H878UZXZ2qrO3PGUCmbDkeR0pVC/YQ0BJQHFv50ks5DsM3WDpIZiB85F9hpRg==",
                            PhoneNumber = "061-502-342",
                            PhoneNumberConfirmed = false,
                            RefreshTokenExpireDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SecurityStamp = "92cf3498-3904-4abb-82f3-f0320098376d",
                            TwoFactorEnabled = false,
                            UserName = "admin"
                        },
                        new
                        {
                            Id = new Guid("fd8eeeae-94c0-4f7c-ae8d-04274d13031b"),
                            AccessFailedCount = 0,
                            CityId = 1,
                            ConcurrencyStamp = "bcec5696-6c85-4a83-9ff3-b6fe7164669e",
                            CreatedDate = new DateTime(2024, 2, 7, 17, 26, 40, 899, DateTimeKind.Unspecified).AddTicks(9869),
                            Email = "belminedelivery@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "desktop",
                            Gender = 1,
                            IsAvailable = true,
                            IsDeleted = false,
                            LastName = "User",
                            LockoutEnabled = false,
                            NormalizedEmail = "BELMINEDELIVERY@GMAIL.COM",
                            NormalizedUserName = "DESKTOP",
                            PasswordHash = "AQAAAAIAAYagAAAAEGQ74H878UZXZ2qrO3PGUCmbDkeR0pVC/YQ0BJQHFv50ks5DsM3WDpIZiB85F9hpRg==",
                            PhoneNumber = "061-111-111",
                            PhoneNumberConfirmed = false,
                            RefreshTokenExpireDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = 1,
                            SecurityStamp = "8bc507ec-7d44-4440-9c41-34e05b7b2ba9",
                            TwoFactorEnabled = false,
                            UserName = "desktop"
                        },
                        new
                        {
                            Id = new Guid("bcc3036b-fcde-4aae-8d5a-7d3b85a91310"),
                            AccessFailedCount = 0,
                            CityId = 1,
                            ConcurrencyStamp = "534a7d71-bae4-4a90-9f04-bf683010eb13",
                            CreatedDate = new DateTime(2024, 2, 7, 17, 26, 40, 899, DateTimeKind.Unspecified).AddTicks(9869),
                            Email = "desktop1edelivery@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "desktop1",
                            Gender = 1,
                            IsAvailable = true,
                            IsDeleted = false,
                            LastName = "User1",
                            LockoutEnabled = false,
                            NormalizedEmail = "DESKTOP1EDELIVERY@GMAIL.COM",
                            NormalizedUserName = "DESKTOP1",
                            PasswordHash = "AQAAAAIAAYagAAAAEGQ74H878UZXZ2qrO3PGUCmbDkeR0pVC/YQ0BJQHFv50ks5DsM3WDpIZiB85F9hpRg==",
                            PhoneNumber = "061-111-112",
                            PhoneNumberConfirmed = false,
                            RefreshTokenExpireDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = 2,
                            SecurityStamp = "bdf81a3b-65ec-4aea-b8b5-71e11efbe872",
                            TwoFactorEnabled = false,
                            UserName = "desktop1"
                        },
                        new
                        {
                            Id = new Guid("a6262414-844d-4003-9184-1a39fcc8d621"),
                            AccessFailedCount = 0,
                            CityId = 1,
                            ConcurrencyStamp = "506abe73-5d78-440b-8d18-f49bc983560b",
                            CreatedDate = new DateTime(2024, 2, 7, 17, 26, 40, 899, DateTimeKind.Unspecified).AddTicks(9869),
                            Email = "desktop2edelivery@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "desktop2",
                            Gender = 1,
                            IsAvailable = true,
                            IsDeleted = false,
                            LastName = "User2",
                            LockoutEnabled = false,
                            NormalizedEmail = "DESKTOP2EDELIVERY@GMAIL.COM",
                            NormalizedUserName = "DESKTOP2",
                            PasswordHash = "AQAAAAIAAYagAAAAEGQ74H878UZXZ2qrO3PGUCmbDkeR0pVC/YQ0BJQHFv50ks5DsM3WDpIZiB85F9hpRg==",
                            PhoneNumber = "061-111-113",
                            PhoneNumberConfirmed = false,
                            RefreshTokenExpireDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = 3,
                            SecurityStamp = "354d040b-e3ab-4c8b-a08d-c60f4fd03d44",
                            TwoFactorEnabled = false,
                            UserName = "desktop2"
                        },
                        new
                        {
                            Id = new Guid("6c932e9e-d350-4103-bd77-c2716d6f4a1f"),
                            AccessFailedCount = 0,
                            CityId = 1,
                            ConcurrencyStamp = "762817bf-98f4-478f-9ba1-34619e50ef90",
                            CreatedDate = new DateTime(2024, 2, 7, 17, 26, 40, 899, DateTimeKind.Unspecified).AddTicks(9869),
                            Email = "desktop3edelivery@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "desktop3",
                            Gender = 1,
                            IsAvailable = true,
                            IsDeleted = false,
                            LastName = "User3",
                            LockoutEnabled = false,
                            NormalizedEmail = "DESKTOP3EDELIVERY@GMAIL.COM",
                            NormalizedUserName = "DESKTOP3",
                            PasswordHash = "AQAAAAIAAYagAAAAEGQ74H878UZXZ2qrO3PGUCmbDkeR0pVC/YQ0BJQHFv50ks5DsM3WDpIZiB85F9hpRg==",
                            PhoneNumber = "061-111-114",
                            PhoneNumberConfirmed = false,
                            RefreshTokenExpireDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = 4,
                            SecurityStamp = "39371a1e-e1c9-43ad-9498-6beccda33e71",
                            TwoFactorEnabled = false,
                            UserName = "desktop3"
                        },
                        new
                        {
                            Id = new Guid("6f43201b-919e-471f-9ca7-4f4d0c74ca39"),
                            AccessFailedCount = 0,
                            CityId = 1,
                            ConcurrencyStamp = "e70e3ab6-5fce-479d-983a-27dad017013f",
                            CreatedDate = new DateTime(2024, 2, 7, 17, 26, 40, 899, DateTimeKind.Unspecified).AddTicks(9869),
                            Email = "desktop4edelivery@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "desktop4",
                            Gender = 1,
                            IsAvailable = true,
                            IsDeleted = false,
                            LastName = "User4",
                            LockoutEnabled = false,
                            NormalizedEmail = "DESKTOP4EDELIVERY@GMAIL.COM",
                            NormalizedUserName = "DESKTOP4",
                            PasswordHash = "AQAAAAIAAYagAAAAEGQ74H878UZXZ2qrO3PGUCmbDkeR0pVC/YQ0BJQHFv50ks5DsM3WDpIZiB85F9hpRg==",
                            PhoneNumber = "123456789",
                            PhoneNumberConfirmed = false,
                            RefreshTokenExpireDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = 5,
                            SecurityStamp = "eed6a0f5-0255-4fb0-99a4-27bb72dbb36e",
                            TwoFactorEnabled = false,
                            UserName = "desktop4"
                        },
                        new
                        {
                            Id = new Guid("e7286ada-7ad6-4bb4-8b0a-436141928671"),
                            AccessFailedCount = 0,
                            CityId = 1,
                            ConcurrencyStamp = "cfa4f0f8-3301-4a95-8615-2d3d24915574",
                            CreatedDate = new DateTime(2024, 2, 7, 17, 26, 40, 899, DateTimeKind.Unspecified).AddTicks(9869),
                            Email = "desktop5edelivery@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "desktop5",
                            Gender = 1,
                            IsAvailable = true,
                            IsDeleted = false,
                            LastName = "User5",
                            LockoutEnabled = false,
                            NormalizedEmail = "DESKTOP5EDELIVERY@GMAIL.COM",
                            NormalizedUserName = "DESKTOP5",
                            PasswordHash = "AQAAAAIAAYagAAAAEGQ74H878UZXZ2qrO3PGUCmbDkeR0pVC/YQ0BJQHFv50ks5DsM3WDpIZiB85F9hpRg==",
                            PhoneNumber = "123456789",
                            PhoneNumberConfirmed = false,
                            RefreshTokenExpireDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = 6,
                            SecurityStamp = "39f7b6ac-6404-43e0-a0b4-d016060259f8",
                            TwoFactorEnabled = false,
                            UserName = "desktop5"
                        },
                        new
                        {
                            Id = new Guid("d405edf6-6ebf-4c20-861d-077f70fbcfb7"),
                            AccessFailedCount = 0,
                            CityId = 1,
                            ConcurrencyStamp = "6001bc37-4b78-4dea-a710-f3e9680cfc0a",
                            CreatedDate = new DateTime(2024, 2, 7, 17, 26, 40, 899, DateTimeKind.Unspecified).AddTicks(9869),
                            Email = "desktop6edelivery@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "desktop6",
                            Gender = 1,
                            IsAvailable = true,
                            IsDeleted = false,
                            LastName = "User6",
                            LockoutEnabled = false,
                            NormalizedEmail = "DESKTOP6EDELIVERY@GMAIL.COM",
                            NormalizedUserName = "DESKTOP6",
                            PasswordHash = "AQAAAAIAAYagAAAAEGQ74H878UZXZ2qrO3PGUCmbDkeR0pVC/YQ0BJQHFv50ks5DsM3WDpIZiB85F9hpRg==",
                            PhoneNumber = "123456789",
                            PhoneNumberConfirmed = false,
                            RefreshTokenExpireDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SecurityStamp = "c706ef59-a604-418f-a2db-63d108e66c91",
                            TwoFactorEnabled = false,
                            UserName = "desktop6"
                        },
                        new
                        {
                            Id = new Guid("b8396f1d-a29a-4856-a4c1-1312dc97a4a1"),
                            AccessFailedCount = 0,
                            CityId = 1,
                            ConcurrencyStamp = "42f893a0-5839-4bf6-8c82-21f76fd8dba7",
                            CreatedDate = new DateTime(2024, 2, 7, 17, 26, 40, 899, DateTimeKind.Unspecified).AddTicks(9869),
                            Email = "flutterhelpme2@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Employee",
                            Gender = 1,
                            IsAvailable = true,
                            IsDeleted = false,
                            LastName = "User",
                            LockoutEnabled = false,
                            NormalizedEmail = "EMPLOYEE@EMPLOYEE.COM",
                            NormalizedUserName = "EMPLOYEE",
                            PasswordHash = "AQAAAAIAAYagAAAAEGQ74H878UZXZ2qrO3PGUCmbDkeR0pVC/YQ0BJQHFv50ks5DsM3WDpIZiB85F9hpRg==",
                            PhoneNumber = "123456789",
                            PhoneNumberConfirmed = false,
                            RefreshTokenExpireDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = 1,
                            SecurityStamp = "e7adbf12-ad65-4587-8801-7fc78e13d88f",
                            TwoFactorEnabled = false,
                            UserName = "MobileDeliveryPerson",
                            WorkFrom = new TimeSpan(0, 10, 0, 0, 0),
                            WorkUntil = new TimeSpan(0, 18, 0, 0, 0)
                        },
                        new
                        {
                            Id = new Guid("b8cd72fb-eac5-40d5-8b22-7e8d601e2760"),
                            AccessFailedCount = 0,
                            CityId = 1,
                            ConcurrencyStamp = "fd35d054-fa5b-4718-a771-f97e31de7b25",
                            CreatedDate = new DateTime(2024, 2, 7, 17, 26, 40, 899, DateTimeKind.Unspecified).AddTicks(9869),
                            Email = "employee1@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Employee1",
                            Gender = 1,
                            IsAvailable = true,
                            IsDeleted = false,
                            LastName = "User1",
                            LockoutEnabled = false,
                            NormalizedEmail = "EMPLOYEE1@GMAIL.COM",
                            NormalizedUserName = "EMPLOYEE1",
                            PasswordHash = "AQAAAAIAAYagAAAAEGQ74H878UZXZ2qrO3PGUCmbDkeR0pVC/YQ0BJQHFv50ks5DsM3WDpIZiB85F9hpRg==",
                            PhoneNumber = "123456789",
                            PhoneNumberConfirmed = false,
                            RefreshTokenExpireDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = 1,
                            SecurityStamp = "f07beebb-f54b-4d3e-9113-9b0000ec41d7",
                            TwoFactorEnabled = false,
                            UserName = "MobileDeliveryPerson1",
                            WorkFrom = new TimeSpan(0, 10, 0, 0, 0),
                            WorkUntil = new TimeSpan(0, 18, 0, 0, 0)
                        },
                        new
                        {
                            Id = new Guid("1bb03af4-c9c6-42f4-8153-dfd0e427bb43"),
                            AccessFailedCount = 0,
                            CityId = 1,
                            ConcurrencyStamp = "5f11f6c2-2106-4f69-b7ea-6b2d1f73d64b",
                            CreatedDate = new DateTime(2024, 2, 7, 17, 26, 40, 899, DateTimeKind.Unspecified).AddTicks(9869),
                            Email = "employee2@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Employee2",
                            Gender = 1,
                            IsAvailable = true,
                            IsDeleted = false,
                            LastName = "User2",
                            LockoutEnabled = false,
                            NormalizedEmail = "EMPLOYEE2@GMAIL.COM",
                            NormalizedUserName = "EMPLOYEE2",
                            PasswordHash = "AQAAAAIAAYagAAAAEGQ74H878UZXZ2qrO3PGUCmbDkeR0pVC/YQ0BJQHFv50ks5DsM3WDpIZiB85F9hpRg==",
                            PhoneNumber = "123456789",
                            PhoneNumberConfirmed = false,
                            RefreshTokenExpireDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RestaurantId = 1,
                            SecurityStamp = "764cfb95-f4c0-4cac-88c1-e4c4efc4f334",
                            TwoFactorEnabled = false,
                            UserName = "MobileDeliveryPerson2",
                            WorkFrom = new TimeSpan(0, 10, 0, 0, 0),
                            WorkUntil = new TimeSpan(0, 18, 0, 0, 0)
                        },
                        new
                        {
                            Id = new Guid("bb5f8b53-1b9c-404f-86c4-6c6036102045"),
                            AccessFailedCount = 0,
                            CityId = 1,
                            ConcurrencyStamp = "55fa3c9b-da27-4060-bd62-1593243e99cf",
                            CreatedDate = new DateTime(2024, 2, 7, 17, 26, 40, 899, DateTimeKind.Unspecified).AddTicks(9869),
                            Email = "kupac11111@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Customer",
                            Gender = 1,
                            IsAvailable = true,
                            IsDeleted = false,
                            LastName = "User",
                            LockoutEnabled = false,
                            NormalizedEmail = "KUPAC11111@GMAIL.COM",
                            NormalizedUserName = "MOBILECUSTOMER",
                            PasswordHash = "AQAAAAIAAYagAAAAEGQ74H878UZXZ2qrO3PGUCmbDkeR0pVC/YQ0BJQHFv50ks5DsM3WDpIZiB85F9hpRg==",
                            PhoneNumber = "123456789",
                            PhoneNumberConfirmed = false,
                            RefreshTokenExpireDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SecurityStamp = "db84a8e1-e05f-4754-abc0-9b5e89270968",
                            TwoFactorEnabled = false,
                            UserName = "MobileCustomer"
                        },
                        new
                        {
                            Id = new Guid("29f648d1-4b82-4bf9-be7c-dc690b6edbf9"),
                            AccessFailedCount = 0,
                            CityId = 1,
                            ConcurrencyStamp = "38b38731-4f59-4c72-9972-e3cbfbae3c02",
                            CreatedDate = new DateTime(2024, 2, 7, 17, 26, 40, 899, DateTimeKind.Unspecified).AddTicks(9869),
                            Email = "mobilecustomer1@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Customer1",
                            Gender = 1,
                            IsAvailable = true,
                            IsDeleted = false,
                            LastName = "User1",
                            LockoutEnabled = false,
                            NormalizedEmail = "MOBILECUSTOMER1@GMAIL.COM",
                            NormalizedUserName = "MOBILECUSTOMER1",
                            PasswordHash = "AQAAAAIAAYagAAAAEGQ74H878UZXZ2qrO3PGUCmbDkeR0pVC/YQ0BJQHFv50ks5DsM3WDpIZiB85F9hpRg==",
                            PhoneNumber = "123456789",
                            PhoneNumberConfirmed = false,
                            RefreshTokenExpireDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SecurityStamp = "4be1d8f3-ed49-4bf8-ad6a-ce082cb2ef57",
                            TwoFactorEnabled = false,
                            UserName = "MobileCustomer1"
                        },
                        new
                        {
                            Id = new Guid("531cbf7f-0aa1-44b2-8186-83867ac6e257"),
                            AccessFailedCount = 0,
                            CityId = 1,
                            ConcurrencyStamp = "c56dd1e8-299d-403f-a02b-67e00a63e624",
                            CreatedDate = new DateTime(2024, 2, 7, 17, 26, 40, 899, DateTimeKind.Unspecified).AddTicks(9869),
                            Email = "mobilecustomer2@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Custome2",
                            Gender = 1,
                            IsAvailable = true,
                            IsDeleted = false,
                            LastName = "User2",
                            LockoutEnabled = false,
                            NormalizedEmail = "MOBILECUSTOMER2@GMAIL.COM",
                            NormalizedUserName = "MOBILECUSTOMER2",
                            PasswordHash = "AQAAAAIAAYagAAAAEGQ74H878UZXZ2qrO3PGUCmbDkeR0pVC/YQ0BJQHFv50ks5DsM3WDpIZiB85F9hpRg==",
                            PhoneNumber = "123456789",
                            PhoneNumberConfirmed = false,
                            RefreshTokenExpireDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SecurityStamp = "be3d1ca4-7751-4ec1-996e-2b45c08bd683",
                            TwoFactorEnabled = false,
                            UserName = "MobileCustomer2"
                        });
                });

            modelBuilder.Entity("e_Delivery.Entities.Verification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsConfirmed")
                        .HasColumnType("bit");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Verifications");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("e_Delivery.Entities.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("e_Delivery.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("e_Delivery.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("e_Delivery.Entities.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("e_Delivery.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("e_Delivery.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("e_Delivery.Entities.Chat", b =>
                {
                    b.HasOne("e_Delivery.Entities.User", "UserFrom")
                        .WithMany()
                        .HasForeignKey("UserFromId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("e_Delivery.Entities.User", "UserTo")
                        .WithMany()
                        .HasForeignKey("UserToId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("UserFrom");

                    b.Navigation("UserTo");
                });

            modelBuilder.Entity("e_Delivery.Entities.Email", b =>
                {
                    b.HasOne("e_Delivery.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("e_Delivery.Entities.FoodItem", b =>
                {
                    b.HasOne("e_Delivery.Entities.Category", "Category")
                        .WithMany("FoodItems")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("e_Delivery.Entities.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId");

                    b.HasOne("e_Delivery.Entities.User", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedByUserId");

                    b.HasOne("e_Delivery.Entities.Restaurant", "Restaurant")
                        .WithMany()
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("CreatedByUser");

                    b.Navigation("ModifiedByUser");

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("e_Delivery.Entities.FoodItemPictures", b =>
                {
                    b.HasOne("e_Delivery.Entities.FoodItem", "FoodItem")
                        .WithMany("FoodItemPictures")
                        .HasForeignKey("FoodItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FoodItem");
                });

            modelBuilder.Entity("e_Delivery.Entities.FoodItemSideDishMapping", b =>
                {
                    b.HasOne("e_Delivery.Entities.FoodItem", "FoodItem")
                        .WithMany("FoodItemSideDishMappings")
                        .HasForeignKey("FoodItemId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("e_Delivery.Entities.SideDish", "SideDish")
                        .WithMany("FoodItemSideDishMappings")
                        .HasForeignKey("SideDishId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("FoodItem");

                    b.Navigation("SideDish");
                });

            modelBuilder.Entity("e_Delivery.Entities.Image", b =>
                {
                    b.HasOne("e_Delivery.Entities.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId");

                    b.HasOne("e_Delivery.Entities.User", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedByUserId");

                    b.HasOne("e_Delivery.Entities.User", "UserProfilePicture")
                        .WithMany()
                        .HasForeignKey("UserProfilePictureId");

                    b.Navigation("CreatedByUser");

                    b.Navigation("ModifiedByUser");

                    b.Navigation("UserProfilePicture");
                });

            modelBuilder.Entity("e_Delivery.Entities.Location", b =>
                {
                    b.HasOne("e_Delivery.Entities.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("e_Delivery.Entities.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId");

                    b.HasOne("e_Delivery.Entities.User", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedByUserId");

                    b.Navigation("City");

                    b.Navigation("CreatedByUser");

                    b.Navigation("ModifiedByUser");
                });

            modelBuilder.Entity("e_Delivery.Entities.Notification", b =>
                {
                    b.HasOne("e_Delivery.Entities.User", "SentByUser")
                        .WithMany()
                        .HasForeignKey("SentByUserId");

                    b.HasOne("e_Delivery.Entities.User", "SentToUser")
                        .WithMany()
                        .HasForeignKey("SentToUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SentByUser");

                    b.Navigation("SentToUser");
                });

            modelBuilder.Entity("e_Delivery.Entities.Order", b =>
                {
                    b.HasOne("e_Delivery.Entities.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("e_Delivery.Entities.User", "DeliveryPersonAssigned")
                        .WithMany()
                        .HasForeignKey("DeliveryPersonAssignedId");

                    b.HasOne("e_Delivery.Entities.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("e_Delivery.Entities.Restaurant", "Restaurant")
                        .WithMany()
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedByUser");

                    b.Navigation("DeliveryPersonAssigned");

                    b.Navigation("Location");

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("e_Delivery.Entities.OrderItem", b =>
                {
                    b.HasOne("e_Delivery.Entities.FoodItem", "FoodItem")
                        .WithMany()
                        .HasForeignKey("FoodItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("e_Delivery.Entities.Order", null)
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId");

                    b.Navigation("FoodItem");
                });

            modelBuilder.Entity("e_Delivery.Entities.OrderItemSideDish", b =>
                {
                    b.HasOne("e_Delivery.Entities.OrderItem", "OrderItem")
                        .WithMany("OrderItemSideDishes")
                        .HasForeignKey("OrderItemId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("e_Delivery.Entities.SideDish", "SideDish")
                        .WithMany("OrderItemSideDishes")
                        .HasForeignKey("SideDishId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("OrderItem");

                    b.Navigation("SideDish");
                });

            modelBuilder.Entity("e_Delivery.Entities.Restaurant", b =>
                {
                    b.HasOne("e_Delivery.Entities.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("e_Delivery.Entities.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId");

                    b.HasOne("e_Delivery.Entities.Image", "Logo")
                        .WithMany()
                        .HasForeignKey("LogoId");

                    b.HasOne("e_Delivery.Entities.User", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedByUserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CreatedByUser");

                    b.Navigation("Location");

                    b.Navigation("Logo");

                    b.Navigation("ModifiedByUser");
                });

            modelBuilder.Entity("e_Delivery.Entities.Review", b =>
                {
                    b.HasOne("e_Delivery.Entities.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId");

                    b.HasOne("e_Delivery.Entities.User", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedByUserId");

                    b.HasOne("e_Delivery.Entities.Restaurant", "Restaurant")
                        .WithMany("Reviews")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedByUser");

                    b.Navigation("ModifiedByUser");

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("e_Delivery.Entities.SideDish", b =>
                {
                    b.HasOne("e_Delivery.Entities.Restaurant", "Restaurant")
                        .WithMany()
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("e_Delivery.Entities.User", b =>
                {
                    b.HasOne("e_Delivery.Entities.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId");

                    b.HasOne("e_Delivery.Entities.Restaurant", "Restaurant")
                        .WithMany()
                        .HasForeignKey("RestaurantId");

                    b.Navigation("City");

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("e_Delivery.Entities.Verification", b =>
                {
                    b.HasOne("e_Delivery.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("e_Delivery.Entities.Category", b =>
                {
                    b.Navigation("FoodItems");
                });

            modelBuilder.Entity("e_Delivery.Entities.FoodItem", b =>
                {
                    b.Navigation("FoodItemPictures");

                    b.Navigation("FoodItemSideDishMappings");
                });

            modelBuilder.Entity("e_Delivery.Entities.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("e_Delivery.Entities.OrderItem", b =>
                {
                    b.Navigation("OrderItemSideDishes");
                });

            modelBuilder.Entity("e_Delivery.Entities.Restaurant", b =>
                {
                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("e_Delivery.Entities.SideDish", b =>
                {
                    b.Navigation("FoodItemSideDishMappings");

                    b.Navigation("OrderItemSideDishes");
                });
#pragma warning restore 612, 618
        }
    }
}
